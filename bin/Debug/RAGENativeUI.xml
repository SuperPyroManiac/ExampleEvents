<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RAGENativeUI</name>
    </assembly>
    <members>
        <member name="E:RAGENativeUI.BaseCollection`1.ItemAdded">
            <summary>
            Occurs when an item is added to this <see cref="T:RAGENativeUI.BaseCollection`1"/> using <see cref="M:RAGENativeUI.BaseCollection`1.Add(`0)"/>.
            </summary>
        </member>
        <member name="E:RAGENativeUI.BaseCollection`1.ItemRemoved">
            <summary>
            Occurs when an item is removed from this <see cref="T:RAGENativeUI.BaseCollection`1"/> using <see cref="M:RAGENativeUI.BaseCollection`1.Remove(`0)"/> or <see cref="M:RAGENativeUI.BaseCollection`1.RemoveAt(System.Int32)"/>.
            </summary>
        </member>
        <member name="E:RAGENativeUI.BaseCollection`1.ItemModified">
            <summary>
            Occurs when an item is modified in this <see cref="T:RAGENativeUI.BaseCollection`1"/> using <see cref="P:RAGENativeUI.BaseCollection`1.Item(System.Int32)"/>.
            </summary>
        </member>
        <member name="E:RAGENativeUI.BaseCollection`1.Cleared">
            <summary>
            Occurs when all the items of this <see cref="T:RAGENativeUI.BaseCollection`1"/> are removed using <see cref="M:RAGENativeUI.BaseCollection`1.Clear"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.BaseCollection`1.Count">
            <summary>
            Gets the number of elements contained in this <see cref="T:RAGENativeUI.BaseCollection`1"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.BaseCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether this <see cref="T:RAGENativeUI.BaseCollection`1"/> is read-only.
            </summary>
        </member>
        <member name="P:RAGENativeUI.BaseCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <value>
            The item.
            </value>
            <param name="index">The index.</param>
            <returns>
            The item at the specified index.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.BaseCollection`1"/> class that is empty.
            </summary>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.BaseCollection`1"/> class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.Add(`0)">
            <summary>
            Adds an item to this <see cref="T:RAGENativeUI.BaseCollection`1" />.
            </summary>
            <param name="item">The item to add to this <see cref="T:RAGENativeUI.BaseCollection`1" />.</param>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index from this <see cref="T:RAGENativeUI.BaseCollection`1"/>.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of the specified item from this <see cref="T:RAGENativeUI.BaseCollection`1"/>.
            </summary>
            <param name="item">The item to remove from this <see cref="T:RAGENativeUI.BaseCollection`1"/>.</param>
            <returns>
            <c>true</c> if the <paramref name="item"/> was successfully removed from this <see cref="T:RAGENativeUI.BaseCollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:RAGENativeUI.BaseCollection`1"/>.
            </returns>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.Clear">
            <summary>
            Removes all items from this <see cref="T:RAGENativeUI.BaseCollection`1"/>.
            </summary>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.Contains(`0)">
            <summary>
            Determines whether this <see cref="T:RAGENativeUI.BaseCollection`1"/> contains a specific item.
            </summary>
            <param name="item">The item to locate in this <see cref="T:RAGENativeUI.BaseCollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in this <see cref="T:RAGENativeUI.BaseCollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of this <see cref="T:RAGENativeUI.BaseCollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from this <see cref="T:RAGENativeUI.BaseCollection`1"/>. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.IndexOf(`0)">
            <summary>
            Searches for the specified item and returns the zero-based index of the first occurrence within the entire <see cref="T:RAGENativeUI.BaseCollection`1"/>.
            </summary>
            <param name="item">The item to search for.</param>
            <returns>The zero-based index of the first occurrence of the item within the entire <see cref="T:RAGENativeUI.BaseCollection`1"/>, if found; otherwise, â€“1.</returns>
        </member>
        <member name="M:RAGENativeUI.BaseCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:RAGENativeUI.BlipExtensions.GetIconToken(Rage.Blip)">
            <summary>
            Gets the token used to display the sprite of <paramref name="blip"/> in formatted scaleform text (i.e. the scaleform uses the game function `SET_FORMATTED_TEXT_WITH_ICONS`).
            <para>
            Example:
            <code>
            Blip myBlip = ...;<br />
            Game.DisplayHelp($"Go to ~{myBlip.GetIconToken()}~.");<br />
            Game.DisplayHelp($"Go to ~{HudColor.Red.GetName()}~~{myBlip.GetIconToken()}~~s~."); // with a different color
            </code>
            </para>
            </summary>
            <param name="blip">The blip to get the sprite from.</param>
            <returns>The <see cref="T:System.String"/> with the icon token for the sprite of the given blip.</returns>
        </member>
        <member name="M:RAGENativeUI.BlipExtensions.GetIconToken(Rage.BlipSprite)">
            <summary>
            Gets the token used to display <paramref name="blipSprite"/> in formatted scaleform text (i.e. the scaleform uses the game function `SET_FORMATTED_TEXT_WITH_ICONS`).
            <para>
            Example:
            <code>
            Game.DisplayHelp($"Go to ~{BlipSprite.Waypoint.GetIconToken()}~.");<br />
            Game.DisplayHelp($"Go to ~{HudColor.Red.GetName()}~~{BlipSprite.Waypoint.GetIconToken()}~~s~."); // with a different color
            </code>
            </para>
            </summary>
            <param name="blipSprite">The blip sprite.</param>
            <returns>The <see cref="T:System.String"/> with the icon token for the given blip sprite.</returns>
        </member>
        <member name="T:RAGENativeUI.Common.EFont">
            <summary>
            Fonts used by GTA V
            </summary>
        </member>
        <member name="M:RAGENativeUI.Common.IsDisabledControlPressed(System.Int32,Rage.GameControl)">
            <summary>
            Check if a Rage.GameControl is pressed while it's disabled
            </summary>
            <param name="index"></param>
            <param name="control"></param>
            <returns>true if a Rage.GameControl is pressed while it's disabled</returns>
        </member>
        <member name="M:RAGENativeUI.Common.IsDisabledControlJustPressed(System.Int32,Rage.GameControl)">
            <summary>
            Check if a Rage.GameControl is just pressed while it's disabled
            </summary>
            <param name="index"></param>
            <param name="control"></param>
            <returns>true if a Rage.GameControl is just pressed while it's disabled</returns>
        </member>
        <member name="M:RAGENativeUI.Common.IsDisabledControlJustReleased(System.Int32,Rage.GameControl)">
            <summary>
            Check if a Rage.GameControl is just released while it's disabled
            </summary>
            <param name="index"></param>
            <param name="control"></param>
            <returns>true if a Rage.GameControl is just released while it's disabled</returns>
        </member>
        <member name="M:RAGENativeUI.Common.GetPressedKeys">
            <summary>
            Gets the current pressed keys.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.ICollection`1"/> with the current pressed keys.</returns>
        </member>
        <member name="M:RAGENativeUI.Common.WriteFileFromResources(System.Reflection.Assembly,System.String)">
            <summary>
            Save an embedded resource to a temporary file.
            </summary>
            <param name="yourAssembly">Your executing assembly.</param>
            <param name="fullResourceName">Resource name including your solution name. E.G MyMenuMod.banner.png</param>
            <returns>Absolute path to the written file.</returns>
        </member>
        <member name="M:RAGENativeUI.Common.WriteFileFromResources(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Save an embedded resource to a concrete path.
            </summary>
            <param name="yourAssembly">Your executing assembly.</param>
            <param name="fullResourceName">Resource name including your solution name. E.G MyMenuMod.banner.png</param>
            <param name="savePath">Path to where save the file, including the filename.</param>
            <returns>Absolute path to the written file.</returns>
        </member>
        <member name="M:RAGENativeUI.Common.Wrap(System.Int32,System.Int32,System.Int32)">
            <param name="min">Maximum value, inclusive</param>
            <param name="max">Maximum value, exclusive</param>
        </member>
        <member name="T:RAGENativeUI.IDisplayItem">
            <summary>
            Represents an object with a value and the text that represents the value.
            </summary>
            <seealso cref="T:System.IEquatable`1"/>
            <seealso cref="T:RAGENativeUI.DisplayItem"/>
        </member>
        <member name="P:RAGENativeUI.IDisplayItem.Value">
            <summary>
            Gets the value of this <see cref="T:RAGENativeUI.IDisplayItem"/>.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:RAGENativeUI.IDisplayItem.DisplayText">
            <summary>
            Gets the display text of this <see cref="T:RAGENativeUI.IDisplayItem"/>.
            </summary>
            <value>
            The display text.
            </value>
        </member>
        <member name="T:RAGENativeUI.DisplayItem">
            <summary>
            Default implementation of <see cref="T:RAGENativeUI.IDisplayItem"/>
            </summary>
            <seealso cref="T:RAGENativeUI.IDisplayItem" />
        </member>
        <member name="P:RAGENativeUI.DisplayItem.NullValueDisplayText">
            <summary>
            Gets or sets the <see cref="T:System.String"/> that <see cref="P:RAGENativeUI.DisplayItem.DisplayText"/> would return if <see cref="P:RAGENativeUI.DisplayItem.Value"/> is null.
            </summary>
            <value>
            The null value display text.
            </value>
        </member>
        <member name="P:RAGENativeUI.DisplayItem.Value">
            <summary>
            Gets the value of this <see cref="T:RAGENativeUI.DisplayItem"/>.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:RAGENativeUI.DisplayItem.DisplayText">
            <summary>
            Gets the display text of this <see cref="T:RAGENativeUI.DisplayItem"/>.
            <para>
            If no display text was specified in the constructor, this will return <see cref="P:RAGENativeUI.DisplayItem.Value"/>'s <see cref="M:System.Object.ToString"/>.
            </para>
            <para>
            If <see cref="P:RAGENativeUI.DisplayItem.Value"/> is null and no display text was specified, this will return <see cref="P:RAGENativeUI.DisplayItem.NullValueDisplayText"/>.
            </para>
            </summary>
            <value>
            The display text.
            </value>
        </member>
        <member name="M:RAGENativeUI.DisplayItem.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.DisplayItem"/> struct with the specified value and display text.
            </summary>
            <param name="value">The value.</param>
            <param name="displayText">The display text.</param>
        </member>
        <member name="M:RAGENativeUI.DisplayItem.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.DisplayItem"/> struct with the specified value and its <see cref="M:System.Object.ToString"/> implementation as the display text.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:RAGENativeUI.DisplayItem.Equals(RAGENativeUI.IDisplayItem)">
            <summary>
            Indicates whether the current <see cref="T:RAGENativeUI.DisplayItem"/>'s <see cref="P:RAGENativeUI.DisplayItem.Value"/> equals the other <see cref="T:RAGENativeUI.IDisplayItem"/>'s <see cref="P:RAGENativeUI.IDisplayItem.Value"/>.
            </summary>
            <param name="other">An <see cref="T:RAGENativeUI.IDisplayItem"/> to compare with this <see cref="T:RAGENativeUI.DisplayItem"/>.</param>
            <returns>
            <c>true</c> if the current <see cref="T:RAGENativeUI.DisplayItem"/> has the same <see cref="P:RAGENativeUI.DisplayItem.Value"/> object as the <paramref name="other"/> <see cref="T:RAGENativeUI.IDisplayItem"/> parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:RAGENativeUI.DisplayItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:RAGENativeUI.DisplayItemsCollection">
            <summary>
            Represents a collection of <see cref="T:RAGENativeUI.IDisplayItem"/>.
            </summary>
            <seealso cref="T:RAGENativeUI.BaseCollection`1" />
        </member>
        <member name="M:RAGENativeUI.DisplayItemsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.DisplayItemsCollection"/> class that is empty.
            </summary>
        </member>
        <member name="M:RAGENativeUI.DisplayItemsCollection.#ctor(System.Collections.Generic.IEnumerable{RAGENativeUI.IDisplayItem})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.DisplayItemsCollection"/> class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:RAGENativeUI.DisplayItemsCollection.Add(System.Object,System.String)">
            <summary>
            Adds the specified value and display text using the default implementation of <see cref="T:RAGENativeUI.IDisplayItem"/>, <see cref="T:RAGENativeUI.DisplayItem"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="displayText">The display text.</param>
        </member>
        <member name="M:RAGENativeUI.DisplayItemsCollection.Add(System.Object)">
            <summary>
            Adds the specified value using the default implementation of <see cref="T:RAGENativeUI.IDisplayItem"/>, <see cref="T:RAGENativeUI.DisplayItem"/>.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:RAGENativeUI.DisplayItemsCollection.Remove(System.Object)">
            <summary>
            Removes all the occurrences of <see cref="T:RAGENativeUI.IDisplayItem"/>s which <see cref="P:RAGENativeUI.IDisplayItem.Value"/> equals the specified <paramref name="value"/> from this <see cref="T:RAGENativeUI.DisplayItemsCollection"/>.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:RAGENativeUI.DisplayItemsCollection.Contains(System.Object)">
            <summary>
            Determines whether this <see cref="T:RAGENativeUI.DisplayItemsCollection"/> contains a <see cref="T:RAGENativeUI.IDisplayItem"/> which <see cref="P:RAGENativeUI.IDisplayItem.Value"/> equals the specified <paramref name="value"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            true if a <see cref="T:RAGENativeUI.IDisplayItem"/> which <see cref="P:RAGENativeUI.IDisplayItem.Value"/> equals the specified <paramref name="value"/> is found in this <see cref="T:RAGENativeUI.DisplayItemsCollection"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:RAGENativeUI.DisplayItemsCollection.IndexOf(System.Object)">
            <summary>
            Searches for the <see cref="T:RAGENativeUI.IDisplayItem"/> which <see cref="P:RAGENativeUI.IDisplayItem.Value"/> equals the specified <paramref name="value"/> and returns the zero-based index of the first occurrence within the entire <see cref="T:RAGENativeUI.DisplayItemsCollection"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The zero-based index of the first occurrence of the <see cref="T:RAGENativeUI.IDisplayItem"/> which <see cref="P:RAGENativeUI.IDisplayItem.Value"/> equals the specified <paramref name="value"/> within the entire <see cref="T:RAGENativeUI.DisplayItemsCollection"/>, if found; otherwise, â€“1.</returns>
        </member>
        <member name="P:RAGENativeUI.Elements.IInstructionalButtonSlot.Text">
            <summary>
            Gets or sets the text displayed next to the button.
            <para>
            If this <see cref="T:RAGENativeUI.Elements.IInstructionalButtonSlot"/> is contained in a <see cref="T:RAGENativeUI.Elements.InstructionalButtons"/> scaleform, 
            <see cref="M:RAGENativeUI.Elements.InstructionalButtons.Update"/> needs to be called to reflect the changes made.
            </para>
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the text displayed next to the button.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.IInstructionalButtonSlot.CanBeDisplayed">
            <summary>
            Gets or sets the <see cref="T:System.Predicate`1"/> that defines the conditions for this <see cref="T:RAGENativeUI.Elements.IInstructionalButtonSlot"/> to be visible.
            <para>
            If this <see cref="T:RAGENativeUI.Elements.IInstructionalButtonSlot"/> is contained in a <see cref="T:RAGENativeUI.Elements.InstructionalButtons"/> scaleform, 
            this predicate is only evaluated when <see cref="M:RAGENativeUI.Elements.InstructionalButtons.Update"/> is called.
            </para>
            </summary>
            <value>
            A <see cref="T:System.Predicate`1"/> delegate that defines the conditions for this <see cref="T:RAGENativeUI.Elements.InstructionalButton"/> to be visible.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.IInstructionalButtonSlot.BindedControl">
            <summary>
            Gets or sets the <see cref="T:Rage.GameControl"/> triggered when the button is clicked. If <c>null</c>, the button cannot be clicked.
            </summary>
            <remarks>
            When the user clicks the button, the specified control will be pressed for one frame so it can be checked with methods such as <see cref="M:Rage.Game.IsControlJustPressed(System.Int32,Rage.GameControl)"/>.
            </remarks>
        </member>
        <member name="M:RAGENativeUI.Elements.IInstructionalButtonSlot.GetButtonId">
            <summary>
            Gets a <see cref="T:System.String"/> that represents the contents of this <see cref="T:RAGENativeUI.Elements.IInstructionalButtonSlot"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the contents of this <see cref="T:RAGENativeUI.Elements.IInstructionalButtonSlot"/>.</returns>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButton.Text">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButton.Button">
            <summary>
            Gets or sets the contents of the button.
            <para>
            If this <see cref="T:RAGENativeUI.Elements.InstructionalButton"/> is contained in a <see cref="T:RAGENativeUI.Elements.InstructionalButtons"/> scaleform, 
            <see cref="M:RAGENativeUI.Elements.InstructionalButtons.Update"/> needs to be called to reflect the changes made.
            </para>
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButton.CanBeDisplayed">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButton.BindedControl">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButton.#ctor(RAGENativeUI.Elements.InstructionalButtonId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButton"/> class.
            </summary>
            <param name="button">The button to be displayed.</param>
            <param name="text">The text displayed next to the button.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButton.#ctor(Rage.GameControl,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButton"/> class. This overload sets <see cref="P:RAGENativeUI.Elements.InstructionalButton.BindedControl"/> to <paramref name="control"/>.
            </summary>
            <param name="control">The <see cref="T:Rage.GameControl"/> displayed inside the button, it changes depending on keybinds and whether the user is using the controller or the keyboard and mouse.</param>
            <param name="text">The text displayed next to the button.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButton.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButton"/> class.
            </summary>
            <param name="buttonText">The text displayed inside the button, mainly for displaying custom keyboard bindings, like "I", or "O", or "F5".</param>
            <param name="text">The text displayed next to the button.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButton.#ctor(System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButton"/> class.
            </summary>
            <param name="rawId">The raw identifier of the symbol to be displayed.</param>
            <param name="text">The text displayed next to the button.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButton.#ctor(RAGENativeUI.InstructionalKey,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButton"/> class.
            </summary>
            <param name="key">The symbol to be displayed.</param>
            <param name="text">The text displayed next to the button.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButton.GetButtonId">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButtonGroup.Text">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButtonGroup.CanBeDisplayed">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButtonGroup.BindedControl">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButtonGroup.Buttons">
            <summary>
            Gets or sets the list containing the buttons of this group.
            <para>
            If this <see cref="T:RAGENativeUI.Elements.InstructionalButtonGroup"/> is contained in a <see cref="T:RAGENativeUI.Elements.InstructionalButtons"/> scaleform, 
            <see cref="M:RAGENativeUI.Elements.InstructionalButtons.Update"/> needs to be called to reflect the changes made.
            </para>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <c>value</c> is null.
            </exception>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{RAGENativeUI.Elements.InstructionalButtonId})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButtonGroup"/> class.
            </summary>
            <param name="text">The text displayed next to the buttons.</param>
            <param name="buttons">The buttons to be displayed.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonGroup.#ctor(System.String,RAGENativeUI.Elements.InstructionalButtonId[])">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButtonGroup"/> class.
            </summary>
            <param name="text">The text displayed next to the buttons.</param>
            <param name="buttons">The buttons to be displayed.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonGroup.GetButtonId">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButtonDynamic.Text">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButtonDynamic.CanBeDisplayed">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButtonDynamic.BindedControl">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonDynamic.#ctor(System.String,RAGENativeUI.Elements.InstructionalButtonId,RAGENativeUI.Elements.InstructionalButtonId)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButtonDynamic"/> class.
            </summary>
            <param name="text">The text displayed next to the button.</param>
            <param name="forKeyboard">The button to be displayed when using keyboard and mouse.</param>
            <param name="forController">The button to be displayed when using a controller.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonDynamic.#ctor(System.String,System.Collections.Generic.IEnumerable{RAGENativeUI.Elements.InstructionalButtonId},System.Collections.Generic.IEnumerable{RAGENativeUI.Elements.InstructionalButtonId})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButtonDynamic"/> class.
            </summary>
            <param name="text">The text displayed next to the button.</param>
            <param name="forKeyboard">The buttons to be displayed when using keyboard and mouse.</param>
            <param name="forController">The buttons to be displayed when using a controller.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonDynamic.GetButtonId">
            <inheritdoc/>
        </member>
        <member name="F:RAGENativeUI.Elements.InstructionalButtonId.EmptyButtonId">
            <summary>
            A blank button. Used when this struct is created with the default constructor or <c>default</c> value.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.InstructionalButtonId.Id">
            <summary>
            Gets the <see cref="T:System.String"/> that represents the button contents.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonId.#ctor(Rage.GameControl)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButtonId"/> structure.
            </summary>
            <param name="control">The <see cref="T:Rage.GameControl"/> displayed inside the button, it changes depending on keybinds and whether the user is using the controller or the keyboard and mouse.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButtonId"/> structure.
            </summary>
            <param name="str">The text displayed inside the button, mainly for displaying custom keyboard bindings, like "I", or "O", or "F5".</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonId.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButtonId"/> structure.
            </summary>
            <param name="rawId">The raw identifier of the symbol to be displayed.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.InstructionalButtonId.#ctor(RAGENativeUI.InstructionalKey)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.InstructionalButtonId"/> structure.
            </summary>
            <param name="key">The symbol to be displayed.</param>
        </member>
        <member name="E:RAGENativeUI.Elements.UIMenuCheckboxItem.CheckboxEvent">
            <summary>
            Triggered when the checkbox state is changed.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuCheckboxItem.Checked">
            <summary>
            Change or get whether the checkbox is checked.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuCheckboxItem.#ctor(System.String,System.Boolean)">
            <summary>
            Checkbox item with a toggleable checkbox.
            </summary>
            <param name="text">Item label.</param>
            <param name="check">Boolean value whether the checkbox is checked.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuCheckboxItem.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Checkbox item with a toggleable checkbox.
            </summary>
            <param name="text">Item label.</param>
            <param name="check">Boolean value whether the checkbox is checked.</param>
            <param name="description">Description for this item.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuCheckboxItem.Draw(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draw item.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuItem">
            <summary>
            Simple item with a label.
            </summary>
        </member>
        <member name="E:RAGENativeUI.Elements.UIMenuItem.Activated">
            <summary>
            Called when user selects the current item.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.CurrentForeColor">
            <summary>
            Gets the current foreground color based on the state of the <see cref="T:RAGENativeUI.Elements.UIMenuItem"/>.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.#ctor(System.String)">
            <summary>
            Basic menu button.
            </summary>
            <param name="text">Button label.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.#ctor(System.String,System.String)">
            <summary>
            Basic menu button.
            </summary>
            <param name="text">Button label.</param>
            <param name="description">Description.</param>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.Selected">
            <summary>
            Whether this item is currently selected.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.Hovered">
            <summary>
            Whether this item is currently being hovered on with a mouse.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.Description">
            <summary>
            This item's description.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.Panels">
            <summary>
            Gets the <see cref="T:RAGENativeUI.Elements.UIMenuPanel"/>s shown when this item is selected.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.Enabled">
            <summary>
            Whether this item is enabled or disabled (text is greyed out and you cannot select it).
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.Skipped">
            <summary>
            Whether this item should be skipped when moving through the menu.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.CanDrawNavBar">
            <summary>
            Gets or sets whether the navigation bar is drawn when selected.
            For now, only needed internally by <see cref="T:RAGENativeUI.PauseMenu.TabInteractiveListItem"/> to hide the navigation bar when not focused.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.Activate(RAGENativeUI.UIMenu)">
            <summary>
            Activates this item.
            </summary>
            <param name="menu">The <see cref="T:RAGENativeUI.UIMenu"/> that is calling this method, or <c>null</c> if no menu is involved.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.Position(System.Int32)">
            <summary>
            Set item's position.
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.SetVerticalPosition(System.Int32)">
            <summary>
            Set item's vertical position.
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.Draw">
            <summary>
            Draw this item.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.GetBadgeOffsets(System.Single@,System.Single@)">
            <summary>
            Gets the offset by which to move the item contents when badges are set.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.OnInput(RAGENativeUI.UIMenu,RAGENativeUI.Common.MenuControls)">
            <summary>
            Handles an input event when this item is selected.
            </summary>
            <param name="menu">The source <see cref="T:RAGENativeUI.UIMenu"/> for this event.</param>
            <param name="control">The input control to handle.</param>
            <returns><c>true</c> if the input was consumed, such that the source <paramref name="menu"/> may not use it again; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="menu"/> is <c>null</c>.</exception>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuItem.MouseInput">
            <summary>
            Defines the left mouse button states for <see cref="M:RAGENativeUI.Elements.UIMenuItem.OnMouseInput(RAGENativeUI.UIMenu,System.Drawing.RectangleF,System.Drawing.PointF,RAGENativeUI.Elements.UIMenuItem.MouseInput)"/>.
            </summary>
            <seealso cref="M:RAGENativeUI.Elements.UIMenuItem.OnMouseInput(RAGENativeUI.UIMenu,System.Drawing.RectangleF,System.Drawing.PointF,RAGENativeUI.Elements.UIMenuItem.MouseInput)"/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.OnMouseInput(RAGENativeUI.UIMenu,System.Drawing.RectangleF,System.Drawing.PointF,RAGENativeUI.Elements.UIMenuItem.MouseInput)">
            <summary>
            Handles a mouse input event when this item is selected.
            </summary>
            <param name="menu">The source <see cref="T:RAGENativeUI.UIMenu"/> for this event.</param>
            <param name="itemBounds">The position and size of this item on screen, in relative coordinates.</param>
            <param name="mousePos">The position of the mouse, in relative coordinates.</param>
            <param name="input">The state of the left mouse button (control <see cref="F:Rage.GameControl.CursorAccept"/>).</param>
            <returns><c>true</c> if the input was consumed, such that the source <paramref name="menu"/> may not use it again; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="menu"/> is <c>null</c>.</exception>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.Offset">
            <summary>
            This item's offset.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.Text">
            <summary>
            Returns this item's label.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.TextStyle">
            <summary>
            Gets or sets the text style for this item's label. Note, the property <see cref="P:RAGENativeUI.TextStyle.Color"/> is ignored, instead the color returned by <see cref="P:RAGENativeUI.Elements.UIMenuItem.CurrentForeColor"/> is used.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.Parent">
            <summary>
            Returns the menu this item is in.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.SetLeftBadge(RAGENativeUI.Elements.UIMenuItem.BadgeStyle)">
            <summary>
            Set the left badge. Set it to None to remove the badge.
            </summary>
            <param name="badge"></param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.SetRightBadge(RAGENativeUI.Elements.UIMenuItem.BadgeStyle)">
            <summary>
            Set the right badge. Set it to None to remove the badge.
            </summary>
            <param name="badge"></param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.SetRightLabel(System.String)">
            <summary>
            Set the right label.
            </summary>
            <param name="text">Text as label. Set it to "" to remove the label.</param>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.RightLabel">
            <summary>
            Gets or sets the current right label.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.RightLabelStyle">
            <summary>
            Gets or sets the text style for the right label. Used by <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/> selected option text as well.
            Note, the property <see cref="P:RAGENativeUI.TextStyle.Color"/> is ignored, instead the color returned by <see cref="P:RAGENativeUI.Elements.UIMenuItem.CurrentForeColor"/> is used.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.LeftBadge">
            <summary>
            Gets or sets the current left badge. Set it to <see cref="F:RAGENativeUI.Elements.UIMenuItem.BadgeStyle.None"/> to remove the badge.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.LeftBadgeInfo">
            <summary>
            Gets or sets the current left badge. Set it to <c>null</c> to remove the badge.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.RightBadge">
            <summary>
            Gets or sets the current right badge. Set it to <see cref="F:RAGENativeUI.Elements.UIMenuItem.BadgeStyle.None"/> to remove the badge.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.RightBadgeInfo">
            <summary>
            Gets or sets the current right badge. Set it to <c>null</c> to remove the badge.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.Style">
            <summary>
            Gets the style of this badge. For user-created <see cref="T:RAGENativeUI.Elements.UIMenuItem.BadgeInfo"/>s, returns <see cref="F:RAGENativeUI.Elements.UIMenuItem.BadgeStyle.Custom"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.TextureDictionary">
            <summary>
            Gets or sets the texture dictionary that contains the texture.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.TextureName">
            <summary>
            Gets or sets the name of the texture.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.SelectedTextureDictionary">
            <summary>
            Gets or sets the alternative texture dictionary used when the <see cref="T:RAGENativeUI.Elements.UIMenuItem"/> is selected.
            If <c>null</c>, <see cref="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.TextureDictionary"/> and <see cref="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.TextureName"/> are used always.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.SelectedTextureName">
            <summary>
            Gets or sets the alternative texture name used when the <see cref="T:RAGENativeUI.Elements.UIMenuItem"/> is selected.
            If <c>null</c>, <see cref="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.TextureDictionary"/> and <see cref="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.TextureName"/> are used always.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.Color">
            <summary>
            Gets or sets the color used when drawing the badge. If <c>null</c> the foreground color of the <see cref="T:RAGENativeUI.Elements.UIMenuItem"/> is used.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.SizeMultiplier">
            <summary>
            Gets or sets the size of the badge.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.IsBlank">
            <summary>
            Gets a value indicating whether the badge is blank. If <c>true</c>, no texture will be drawn but the <see cref="T:RAGENativeUI.Elements.UIMenuItem"/> contents still get indented.
            A badge is considered blank when <see cref="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.TextureDictionary"/> or <see cref="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.TextureName"/> are null.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.#ctor(RAGENativeUI.Elements.UIMenuItem.BadgeStyle,System.String,System.String,System.Nullable{System.Drawing.Color},System.String,System.String,System.Single)">
            <summary>
            Constructor for built-in badges.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.#ctor(System.String,System.String,System.Nullable{System.Drawing.Color},System.String,System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuItem.BadgeInfo"/> class with <see cref="P:RAGENativeUI.Elements.UIMenuItem.BadgeInfo.Style"/> set to <see cref="F:RAGENativeUI.Elements.UIMenuItem.BadgeStyle.Custom"/>.
            </summary>
            <param name="textureDictionary">The texture dictionary that contains the texture.</param>
            <param name="textureName">The name of the texture.</param>
            <param name="selectedTextureDictionary">
            Alternative texture dictionary used when the <see cref="T:RAGENativeUI.Elements.UIMenuItem"/> is selected.
            If <c>null</c>, <paramref name="textureDictionary"/> and <paramref name="textureName"/> are used always.
            </param>
            <param name="selectedTextureName">
            Alternative texture name used when the <see cref="T:RAGENativeUI.Elements.UIMenuItem"/> is selected.
            If <c>null</c>, <paramref name="textureDictionary"/> and <paramref name="textureName"/> are used always.
            </param>
            <param name="color">
            Determines the color used when drawing this badge. If <c>null</c>, the foreground color of the <see cref="T:RAGENativeUI.Elements.UIMenuItem"/> is used.
            </param>
            <param name="sizeMultiplier">
            Determines the size of the badge.
            </param>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuListItem">
            <summary>
             A list item, with left/right arrows.
            </summary>
            <seealso cref="T:RAGENativeUI.Elements.UIMenuItem" />
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListItem.Items">
            <summary>
            Gets or sets the items from this <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/> instance.
            </summary>
            <remarks>
            For better safety before modifying the items <see cref="T:System.Collections.Generic.List`1"/> set <see cref="P:RAGENativeUI.Elements.UIMenuListItem.Index"/> to 0.
            </remarks>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListItem.Collection">
            <summary>
            Gets the collection of items of this <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>.
            </summary>
            <value>
            The <see cref="T:RAGENativeUI.DisplayItemsCollection"/> of this <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListItem.SelectedItem">
            <summary>
            Gets the current selection.
            </summary>
            <value>
            The current selection's <see cref="T:RAGENativeUI.IDisplayItem"/>.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListItem.SelectedValue">
            <summary>
            Gets the current selection value.
            </summary>
            <value>
            The current selection's <see cref="P:RAGENativeUI.IDisplayItem.Value"/>.
            </value>
        </member>
        <member name="F:RAGENativeUI.Elements.UIMenuListItem.ScrollingEnabled">
            <summary>
            Enables or disables scrolling through the list by holding the key
            </summary>
        </member>
        <member name="E:RAGENativeUI.Elements.UIMenuListItem.OnListChanged">
            <summary>
            Triggered when the list is changed.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListItem.Index">
            <summary>
            Returns the current selected index or -1 if the collection is empty.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.#ctor(System.String,System.Collections.Generic.List{System.Object},System.Int32)">
            <summary>
            List item, with left/right arrows.
            </summary>
            <param name="text">Item label.</param>
            <param name="items">List that contains your items.</param>
            <param name="index">Index in the list. If unsure user 0.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.#ctor(System.String,System.Collections.Generic.List{System.Object},System.Int32,System.String)">
            <summary>
            List item, with left/right arrows.
            </summary>
            <param name="text">Item label.</param>
            <param name="items">List that contains your items.</param>
            <param name="index">Index in the list. If unsure user 0.</param>
            <param name="description">Description for this item.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{RAGENativeUI.IDisplayItem})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/> class, from a collection of <see cref="T:RAGENativeUI.IDisplayItem"/>s.
            </summary>
            <param name="text">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s label.</param>
            <param name="description">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s description.</param>
            <param name="items">The collection of <see cref="T:RAGENativeUI.IDisplayItem"/>s.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.#ctor(System.String,System.String,RAGENativeUI.IDisplayItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/> class, from a collection of <see cref="T:RAGENativeUI.IDisplayItem"/>s.
            </summary>
            <param name="text">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s label.</param>
            <param name="description">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s description.</param>
            <param name="items">The collection of <see cref="T:RAGENativeUI.IDisplayItem"/>s.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/> class, from a collection of <see cref="T:System.Object"/>s using the default implementation of <see cref="T:RAGENativeUI.IDisplayItem"/>, <see cref="T:RAGENativeUI.DisplayItem"/>.
            </summary>
            <param name="text">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s label.</param>
            <param name="description">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s description.</param>
            <param name="itemsValues">The collection of <see cref="T:System.Object"/>s.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.#ctor(System.String,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/> class, from a collection of <see cref="T:System.Object"/>s using the default implementation of <see cref="T:RAGENativeUI.IDisplayItem"/>, <see cref="T:RAGENativeUI.DisplayItem"/>.
            </summary>
            <param name="text">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s label.</param>
            <param name="description">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s description.</param>
            <param name="itemsValues">The collection of <see cref="T:System.Object"/>s.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/> class with an empty <see cref="P:RAGENativeUI.Elements.UIMenuListItem.Collection"/>.
            </summary>
            <param name="text">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s label.</param>
            <param name="description">The <see cref="T:RAGENativeUI.Elements.UIMenuListItem"/>'s description.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.ItemToIndex(System.Object)">
            <summary>
            Find an item in the list and return it's index.
            </summary>
            <param name="item">Item to search for.</param>
            <returns>Item index.</returns>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.IndexToItem(System.Int32)">
            <summary>
            Find an item by it's index and return the item.
            </summary>
            <param name="index">Item's index.</param>
            <returns>Item</returns>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListItem.Draw(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draw item.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuListScrollerItem`1">
            <summary>
            Represents a scroller item with a list of items to scroll through.
            </summary>
            <typeparam name="T">
            The type of the items.
            </typeparam>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.SelectedItem">
            <summary>
            Gets or sets the item that is currently selected.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.Items"/> is empty while getting the selected item.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value in a set operation is not contained in <see cref="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.Items"/>.
            </exception>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.Items">
            <summary>
            Gets or sets the list containing the items.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <c>value</c> is null.
            </exception>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.Formatter">
            <summary>
            Gets or sets the formatter used to display the selected item.
            A <see cref="T:System.Func`2"/> that takes in a <typeparamref name="T"/> and returns its <see cref="T:System.String"/> representation.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <c>value</c> is null.
            </exception>
            <seealso cref="M:RAGENativeUI.Elements.UIMenuListScrollerItem`1.DefaultFormatter(`0)"/>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.OptionText">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.OptionCount">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListScrollerItem`1.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuListScrollerItem`1"/> class with the specified items.
            </summary>
            <param name="text">The label of this list scroller.</param>
            <param name="description">The description of this list scroller.</param>
            <param name="items">The items of this list scroller.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListScrollerItem`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuListScrollerItem`1"/> class with no items.
            </summary>
            <param name="text">The label of this menu item.</param>
            <param name="description">The description of this menu item.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListScrollerItem`1.Reformat">
            <summary>
            Requests <see cref="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.OptionText"/> to be updated based on the current <see cref="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.SelectedItem"/>.
            </summary>
            <remarks>
            <see cref="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.Formatter"/> may not be invoked until <see cref="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.OptionText"/> is accessed.
            </remarks>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListScrollerItem`1.OnSelectedIndexChanged(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuListScrollerItem`1.DefaultFormatter(`0)">
            <summary>
            The default value of <see cref="P:RAGENativeUI.Elements.UIMenuListScrollerItem`1.Formatter"/>.
            The returned <see cref="T:System.String"/> is obtained through the <see cref="M:System.Object.ToString"/> method of <typeparamref name="T"/>.
            </summary>
            <param name="value">The value to format.</param>
            <returns>
            The <see cref="T:System.String"/> representation of <paramref name="value"/>.
            If <paramref name="value"/> is <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1">
            <summary>
            Represents a scroller item that displays numeric values within a range.
            </summary>
            <typeparam name="T">
            The numeric type to use. Possible types are: <see cref="T:System.SByte"/>, <see cref="T:System.Byte"/>, <see cref="T:System.Int16"/>, <see cref="T:System.UInt16"/>,
            <see cref="T:System.Int32"/>, <see cref="T:System.UInt32"/>, <see cref="T:System.Int64"/>, <see cref="T:System.UInt64"/>, <see cref="T:System.Single"/>, <see cref="T:System.Double"/> and <see cref="T:System.Decimal"/>.
            <para>
            If some other type that meets the constraints is used, a <see cref="T:System.InvalidOperationException"/> will be thrown at runtime.
            </para>
            </typeparam>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Value">
            <summary>
            Gets or sets the currently selected value. When changing its value, the new value is rounded to nearest possible
            value depending on the <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Minimum"/>, <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Maximum"/> and <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Step"/> values.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <c>value</c> is less than <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Minimum"/>.
            -or-
            <c>value</c> is greater than <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Maximum"/>.
            </exception>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Minimum">
            <summary>
            Gets or sets the minimum value of the numeric scroller, inclusive.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Maximum">
            <summary>
            Gets or sets the maximum value of the numeric scroller, inclusive.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Step">
            <summary>
            Gets or sets the value to increment or decrement when scrolling.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <c>value</c> is negative or zero.
            </exception>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.OptionText">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.OptionCount">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Formatter">
            <summary>
            Gets or sets the formatter used to display the selected item.
            A <see cref="T:System.Func`2"/> that takes in a <typeparamref name="T"/> and returns its <see cref="T:System.String"/> representation.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <c>value</c> is null.
            </exception>
            <seealso cref="M:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.DefaultFormatter(`0)"/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.#ctor(System.String,System.String,`0,`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1"/> class.
            </summary>
            <param name="text">The <see cref="T:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1"/>'s label.</param>
            <param name="description">The <see cref="T:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1"/>'s description.</param>
            <param name="minimum">The minimum value, inclusive.</param>
            <param name="maximum">The maximum value, inclusive.</param>
            <param name="step">The value to increment or decrement when scrolling.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Reformat">
            <summary>
            Requests <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.OptionText"/> to be updated based on the current <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Value"/>.
            </summary>
            <remarks>
            <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Formatter"/> may not be invoked until <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.OptionText"/> is accessed.
            </remarks>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.OnSelectedIndexChanged(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.SetSelectedValueRaw(RAGENativeUI.Elements.UIMenuNumericScrollerItem{`0}.Number)">
            <summary>
            Sets <see cref="F:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.selectedValue"/> without trigering any event.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.DefaultFormatter(`0)">
            <summary>
            The default value of <see cref="P:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Formatter"/>.
            The returned <see cref="T:System.String"/> is obtained through the <see cref="M:System.Object.ToString"/> method of <typeparamref name="T"/>.
            If <typeparamref name="T"/> is a floating-point type, the value is formatted with 2 decimal places.
            </summary>
            <param name="value">The value to format.</param>
            <returns>
            The <see cref="T:System.String"/> representation of <paramref name="value"/>.
            </returns>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuNumericScrollerItem`1.Number">
            <summary>
            Helper struct to perform arithmetic operations independent of the generic type.
            Once JITted, it compiles down to pretty much the same code as using the type directly.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuScrollerItem">
            <summary>
            Implements the basic functionality of an item with multiple options to choose from through scrolling, with left/right arrows.
            </summary>
            <seealso cref="T:RAGENativeUI.Elements.UIMenuScrollerSliderBar"/>
        </member>
        <member name="F:RAGENativeUI.Elements.UIMenuScrollerItem.EmptyIndex">
            <summary>
            Defines the value of <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.Index"/> when <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.IsEmpty"/> is <c>true</c>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerItem.Index">
            <summary>
            Gets or sets the index of the selected option. When <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.IsEmpty"/> is <c>true</c>, <see cref="F:RAGENativeUI.Elements.UIMenuScrollerItem.EmptyIndex"/> is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            <c>value</c> is not <see cref="F:RAGENativeUI.Elements.UIMenuScrollerItem.EmptyIndex"/> when <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.IsEmpty"/> is <c>true</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <c>value</c> is negative.
            -or-
            <c>value</c> is equal to or greater than <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.OptionCount"/>.
            </exception>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerItem.OptionCount">
            <summary>
            Gets the number of possible options.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerItem.OptionText">
            <summary>
            Gets the text to display as the currently selected option.
            </summary>
            <remarks>
            This property is also used when <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.IsEmpty"/> is <c>true</c>, so the implementation needs to take into account this
            state, for example it may return <c>null</c>.
            </remarks>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerItem.IsEmpty">
            <summary>
            Gets whether any option is available.
            </summary>
            <returns>
            <c>true</c> when <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.OptionCount"/> is zero or negative; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="E:RAGENativeUI.Elements.UIMenuScrollerItem.IndexChanged">
            <summary>
            Occurs when the value of <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.Index"/> changes, either programmatically or when the user interacts with the item.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerItem.ScrollingEnabled">
            <summary>
            Gets or sets whether scrolling through the options is enabled.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerItem.ScrollingEnabledWhenDisabled">
            <summary>
            Gets or sets whether scrolling through the options is enabled when <see cref="P:RAGENativeUI.Elements.UIMenuItem.Enabled"/> is <c>false</c>.
            </summary>
            <remarks>
            The property <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.ScrollingEnabled"/> still has to be <c>true</c> to enable scrolling when the item is disabled.
            </remarks>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerItem.AllowWrapAround">
            <summary>
            Gets or sets whether when the last option is selected, it can continue scrolling to the first option, and vice versa.
            The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerItem.RightLabel">
            <inheritdoc/>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerItem.SliderBar">
            <summary>
            Gets or sets the slider bar for this scroller. If not <c>null</c>, the selected option is represented as a progress bar, filled as it goes from the first option (empty) to the last option (full).
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuScrollerItem"/> class.
            </summary>
            <param name="text">The <see cref="T:RAGENativeUI.Elements.UIMenuScrollerItem"/>'s label.</param>
            <param name="description">The <see cref="T:RAGENativeUI.Elements.UIMenuScrollerItem"/>'s description.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerItem.ScrollToNextOption(RAGENativeUI.UIMenu)">
            <summary>
            Scrolls to the next option following the selected option.
            </summary>
            <param name="menu">The <see cref="T:RAGENativeUI.UIMenu"/> that is calling this method, or <c>null</c> if no menu is involved.</param>
            <returns><c>true</c> if <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.Index"/> changed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerItem.ScrollToPreviousOption(RAGENativeUI.UIMenu)">
            <summary>
            Scrolls to the option previous to the selected option.
            </summary>
            <param name="menu">The <see cref="T:RAGENativeUI.UIMenu"/> that is calling this method, or <c>null</c> if no menu is involved.</param>
            <returns><c>true</c> if <see cref="P:RAGENativeUI.Elements.UIMenuScrollerItem.Index"/> changed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerItem.Draw(System.Single,System.Single,System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerItem.OnInput(RAGENativeUI.UIMenu,RAGENativeUI.Common.MenuControls)">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerItem.OnMouseInput(RAGENativeUI.UIMenu,System.Drawing.RectangleF,System.Drawing.PointF,RAGENativeUI.Elements.UIMenuItem.MouseInput)">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerItem.OnSelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Triggers the <see cref="E:RAGENativeUI.Elements.UIMenuScrollerItem.IndexChanged"/> event.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuScrollerSliderBar">
            <summary>
            Defines a slider bar for a <see cref="T:RAGENativeUI.Elements.UIMenuScrollerItem"/>, that represents the selected option as a progress bar,
            filled as it goes from the first option (empty) to the last option (full).
            </summary>
            <seealso cref="T:RAGENativeUI.Elements.UIMenuScrollerItem"/>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerSliderBar.ForegroundColor">
            <summary>
            Gets or sets the foreground color of the slider bar.
            </summary>
            <remarks>
            The default value is the color of <see cref="F:RAGENativeUI.HudColor.Blue"/>.
            </remarks>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerSliderBar.BackgroundColor">
            <summary>
            Gets or sets the background color of the slider bar.
            </summary>
            <remarks>
            The default value is the color of <see cref="F:RAGENativeUI.HudColor.Blue"/>, with alpha 120.
            </remarks>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerSliderBar.Width">
            <summary>
            Gets or sets the width of the slider bar.
            The value is a percentage of the width of the item (minus some margin), from 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerSliderBar.Height">
            <summary>
            Gets or sets the height of the slider bar.
            The value is a percentage of the height of the item (minus some margin), from 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerSliderBar.Markers">
            <summary>
            Gets a list containing the markers of the slider bar.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerSliderBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuScrollerSliderBar"/> class.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker">
            <summary>
            Defines a <see cref="T:RAGENativeUI.Elements.UIMenuScrollerSliderBar"/> marker. A marker is represented as a thin line over the slider bar at the specified <see cref="P:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker.Percentage"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker.Percentage">
            <summary>
            Gets the percentage at which the marker is placed. Its range is from <c>0.0f</c> to <c>1.0f</c>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker.Color">
            <summary>
            Gets the color of the marker. If <c>null</c>, <see cref="P:RAGENativeUI.Elements.UIMenuItem.CurrentForeColor"/> is used instead.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker.#ctor(System.Single,System.Nullable{System.Drawing.Color})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker"/> structure.
            </summary>
            <param name="percentage">
            The percentage at which the marker is placed.
            Valid range is from <c>0.0f</c> to <c>1.0f</c>, values outside this range are clamped.
            </param>
            <param name="color">The color of the marker. If <c>null</c>, <see cref="P:RAGENativeUI.Elements.UIMenuItem.CurrentForeColor"/> is used instead.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.TimerBarMarker"/> structure using the foreground color of the item as its color.
            </summary>
            <param name="percentage">
            The percentage at which the marker is placed.
            Its valid range is from <c>0.0f</c> to <c>1.0f</c>, values outside this range are clamped.
            </param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker.Equals(RAGENativeUI.Elements.UIMenuScrollerSliderBarMarker)">
            <inheritdoc/>
        </member>
        <member name="T:RAGENativeUI.Elements.UIMenuSwitchMenusItem">
            <summary>
            List item that holds an <see cref="T:RAGENativeUI.UIMenu"/> list and allows to easily switch between those menus.
            </summary>
            <remarks>
            All the <see cref="T:RAGENativeUI.UIMenu"/>s must have the same instance of this <see cref="T:RAGENativeUI.Elements.UIMenuSwitchMenusItem"/> and
            is recommended to use the property <see cref="P:RAGENativeUI.Elements.UIMenuSwitchMenusItem.CurrentMenu"/> to make the menu visible without issues.
            </remarks>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuSwitchMenusItem.CurrentMenu">
            <summary>
            The currently selected menu. Use this to make the proper menu visible when using this item.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuSwitchMenusItem.Index">
            <summary>
            Returns the current selected index.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.#ctor(System.String,System.Collections.Generic.List{RAGENativeUI.UIMenu},System.Int32)">
            <summary>
            List item, with left/right arrows that switches the current menu depending on the current <see cref="T:RAGENativeUI.UIMenu"/> item.
            Uses the menus titles as the names in the list.
            </summary>
            <param name="text">Item label.</param>
            <param name="menus">List that contains your <see cref="T:RAGENativeUI.UIMenu"/>s.</param>
            <param name="index">Index in the list. If unsure user 0.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.#ctor(System.String,System.Collections.Generic.List{RAGENativeUI.UIMenu},System.Int32,System.String)">
            <summary>
            List item, with left/right arrows that switches the current menu depending on the current <see cref="T:RAGENativeUI.UIMenu"/> item.
            Uses the menus titles as the names in the list.
            </summary>
            <param name="text">Item label.</param>
            <param name="menus">List that contains your <see cref="T:RAGENativeUI.UIMenu"/>s.</param>
            <param name="index">Index in the list. If unsure user 0.</param>
            <param name="description">Description for this item.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.#ctor(System.String,System.Collections.Generic.List{RAGENativeUI.UIMenu},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            List item, with left/right arrows that switches the current menu depending on the current <see cref="T:RAGENativeUI.UIMenu"/> item.
            The menus list and the menus names list must have the same items count.
            </summary>
            <param name="text">Item label.</param>
            <param name="menus">List that contains your <see cref="T:RAGENativeUI.UIMenu"/>s.</param>
            <param name="menusNames">List that contains a name for each <see cref="T:RAGENativeUI.UIMenu"/> in the same order</param>
            <param name="index">Index in the list. If unsure user 0.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.#ctor(System.String,System.Collections.Generic.List{RAGENativeUI.UIMenu},System.Collections.Generic.List{System.String},System.Int32,System.String)">
            <summary>
            List item, with left/right arrows that switches the current menu depending on the current <see cref="T:RAGENativeUI.UIMenu"/> item.
            The menus list and the menus names list must have the same items count.
            </summary>
            <param name="text">Item label.</param>
            <param name="menus">List that contains your <see cref="T:RAGENativeUI.UIMenu"/>s.</param>
            <param name="menusNames">List that contains a name for each <see cref="T:RAGENativeUI.UIMenu"/> in the same order</param>
            <param name="index">Index in the list. If unsure user 0.</param>
            <param name="description">Description for this item.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{RAGENativeUI.IDisplayItem})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuSwitchMenusItem"/> class a list menu item, with left/right arrows that switches the current menu depending on the current <see cref="T:RAGENativeUI.UIMenu"/> item,
            from a collection of <see cref="T:RAGENativeUI.IDisplayItem"/>s.
            <para>
            All <see cref="P:RAGENativeUI.IDisplayItem.Value"/>s need to be <see cref="T:RAGENativeUI.UIMenu"/>s.
            </para>
            </summary>
            <param name="text">The item label.</param>
            <param name="description">The description for this item.</param>
            <param name="menusDisplayItems">The collection of <see cref="T:RAGENativeUI.IDisplayItem"/>s with <see cref="T:RAGENativeUI.UIMenu"/>s as <see cref="P:RAGENativeUI.IDisplayItem.Value"/>s.</param>
            <exception cref="T:System.ArgumentException">Thrown if any <see cref="P:RAGENativeUI.IDisplayItem.Value"/> isn't a <see cref="T:RAGENativeUI.UIMenu"/></exception>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.#ctor(System.String,System.String,RAGENativeUI.IDisplayItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuSwitchMenusItem"/> class a list menu item, with left/right arrows that switches the current menu depending on the current <see cref="T:RAGENativeUI.UIMenu"/> item,
            from a collection of <see cref="T:RAGENativeUI.IDisplayItem"/>s.
            <para>
            All <see cref="P:RAGENativeUI.IDisplayItem.Value"/>s need to be <see cref="T:RAGENativeUI.UIMenu"/>s.
            </para>
            </summary>
            <param name="text">The item label.</param>
            <param name="description">The description for this item.</param>
            <param name="menusDisplayItems">The collection of <see cref="T:RAGENativeUI.IDisplayItem"/>s with <see cref="T:RAGENativeUI.UIMenu"/>s as <see cref="P:RAGENativeUI.IDisplayItem.Value"/>s.</param>
            <exception cref="T:System.ArgumentException">Thrown if any <see cref="P:RAGENativeUI.IDisplayItem.Value"/> isn't a <see cref="T:RAGENativeUI.UIMenu"/></exception>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{RAGENativeUI.UIMenu})">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuSwitchMenusItem"/> class a list menu item, with left/right arrows that switches the current menu depending on the current <see cref="T:RAGENativeUI.UIMenu"/> item,
            from a collection of <see cref="T:RAGENativeUI.UIMenu"/>s using the default implementation of <see cref="T:RAGENativeUI.IDisplayItem"/>, <see cref="T:RAGENativeUI.DisplayItem"/>, and the <see cref="T:RAGENativeUI.UIMenu"/>'s title caption as display text.
            </summary>
            <param name="text">The item label.</param>
            <param name="description">The description for this item.</param>
            <param name="menus">The collection of <see cref="T:RAGENativeUI.UIMenu"/>s.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.#ctor(System.String,System.String,RAGENativeUI.UIMenu[])">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuSwitchMenusItem"/> class a list menu item, with left/right arrows that switches the current menu depending on the current <see cref="T:RAGENativeUI.UIMenu"/> item,
            from a collection of <see cref="T:RAGENativeUI.UIMenu"/>s using the default implementation of <see cref="T:RAGENativeUI.IDisplayItem"/>, <see cref="T:RAGENativeUI.DisplayItem"/>, and the <see cref="T:RAGENativeUI.UIMenu"/>'s title caption as display text.
            </summary>
            <param name="text">The item label.</param>
            <param name="description">The description for this item.</param>
            <param name="menus">The collection of <see cref="T:RAGENativeUI.UIMenu"/>s.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.MenuToIndex(RAGENativeUI.UIMenu)">
            <summary>
            Find a menu in the list and return it's index.
            </summary>
            <param name="menu">Menu to search for.</param>
            <returns>Item index.</returns>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSwitchMenusItem.IndexToMenu(System.Int32)">
            <summary>
            Find a menu by it's index and return the menu.
            </summary>
            <param name="index">Menu's index.</param>
            <returns>Menu</returns>
        </member>
        <member name="F:RAGENativeUI.Elements.UIMenuGridPanelStyle.Full">
            <summary>
            A 5x5 grid.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.UIMenuGridPanelStyle.SingleRow">
            <summary>
            A single row with 5 cells. With this style, only the X component of <see cref="P:RAGENativeUI.Elements.UIMenuGridPanel.Value"/> can be modified, the Y component is fixed to <c>0.5f</c>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.UIMenuGridPanelStyle.SingleColumn">
            <summary>
            A single column with 5 cells. With this style, only the Y component of <see cref="P:RAGENativeUI.Elements.UIMenuGridPanel.Value"/> can be modified, the X component is fixed to <c>0.5f</c>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuPanel.InstructionalButtons">
            <summary>
            Gets the instructional buttons to show when this panel is visible.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuPanel.ProcessControl">
            <returns>Whether any input was consumed.</returns>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuPanel.ProcessMouse(System.Single,System.Single)">
            <returns>Whether any input was consumed.</returns>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuSliderPanel.BarForegroundColor">
            <summary>
            Gets or sets the foreground color of the slider bar.
            </summary>
            <remarks>
            The default value is the color of <see cref="F:RAGENativeUI.HudColor.White"/>.
            </remarks>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuSliderPanel.BarBackgroundColor">
            <summary>
            Gets or sets the background color of the slider bar.
            </summary>
            <remarks>
            The default value is the color of <see cref="F:RAGENativeUI.HudColor.White"/>, with alpha 76.
            </remarks>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuSliderPanel.Marker.Percentage">
            <summary>
            Gets the percentage at which the marker is placed. Its range is from <c>0.0f</c> to <c>1.0f</c>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.UIMenuSliderPanel.Marker.Color">
            <summary>
            Gets the color of the marker. If <c>null</c>, <see cref="P:RAGENativeUI.Elements.UIMenuItem.CurrentForeColor"/> is used instead.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSliderPanel.Marker.#ctor(System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuSliderPanel.Marker"/> structure.
            </summary>
            <param name="percentage">
            The percentage at which the marker is placed.
            Valid range is from <c>0.0f</c> to <c>1.0f</c>, values outside this range are clamped.
            </param>
            <param name="color">The color of the marker. If <c>null</c>, <see cref="P:RAGENativeUI.Elements.UIMenuItem.CurrentForeColor"/> is used instead.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSliderPanel.Marker.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.UIMenuSliderPanel.Marker"/> structure using <see cref="F:RAGENativeUI.HudColor.Black"/> as its color.
            </summary>
            <param name="percentage">
            The percentage at which the marker is placed.
            Its valid range is from <c>0.0f</c> to <c>1.0f</c>, values outside this range are clamped.
            </param>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSliderPanel.Marker.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSliderPanel.Marker.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.UIMenuSliderPanel.Marker.Equals(RAGENativeUI.Elements.UIMenuSliderPanel.Marker)">
            <inheritdoc/>
        </member>
        <member name="E:RAGENativeUI.Elements.MissionPassedScreen.ContinueHit">
            <summary>
            Occurs when the user presses <see cref="P:RAGENativeUI.Elements.MissionPassedScreen.ContinueControl"/> while this <see cref="T:RAGENativeUI.Elements.MissionPassedScreen"/> is shown.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreen.Title">
            <summary>
            Gets or sets the title, the big yellow text.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the text of the title.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreen.Subtitle">
            <summary>
            Gets or sets the subtitle, the text below the <see cref="P:RAGENativeUI.Elements.MissionPassedScreen.Title"/>.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the text of the subtitle.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreen.CompletionPercentage">
            <summary>
            Gets or sets the value that will be displayed as the completion percentage.
            </summary>
            <value>
            A <see cref="T:System.Int32"/> representing the completion percentage.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreen.Medal">
            <summary>
            Gets or sets the medal displayed next to the completion percentage.
            </summary>
            <value>
            A <see cref="T:RAGENativeUI.Elements.MissionPassedScreen.MedalType"/> representing the medal displayed next to the completion percentage.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreen.Items">
            <summary>
            Gets the <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/>s contained on this <see cref="T:RAGENativeUI.Elements.MissionPassedScreen"/>.
            </summary>
            <value>
            A <see cref="T:RAGENativeUI.Elements.MissionPassedScreen.MissionPassedScreenItemsCollection"/> instance.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreen.InstructionalButtons">
            <summary>
            Gets the instructional buttons displayed when this <see cref="T:RAGENativeUI.Elements.MissionPassedScreen"/> is visible.
            </summary>
            <value>
            A <see cref="T:RAGENativeUI.Elements.InstructionalButtons"/> instance.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreen.ContinueControl">
            <summary>
            Gets or sets the game control that must be pressed to exit this <see cref="T:RAGENativeUI.Elements.MissionPassedScreen"/>. By default <see cref="F:Rage.GameControl.FrontendAccept"/>.
            </summary>
            <value>
            A <see cref="T:Rage.GameControl"/>.
            </value>
        </member>
        <member name="M:RAGENativeUI.Elements.MissionPassedScreen.#ctor(System.String,System.String,System.Int32,RAGENativeUI.Elements.MissionPassedScreen.MedalType)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.MissionPassedScreen"/> class.
            </summary>
            <param name="title">The title, the big yellow text.</param>
            <param name="subtitle">The subtitle, the text below the <see cref="P:RAGENativeUI.Elements.MissionPassedScreen.Title"/>.</param>
            <param name="completionPercentage">The value that will be displayed as the completion percentage.</param>
            <param name="medal">The medal type displayed next to the completion percentage.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.MissionPassedScreen.#ctor(System.String,System.Int32,RAGENativeUI.Elements.MissionPassedScreen.MedalType)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.MissionPassedScreen"/> class with the <see cref="P:RAGENativeUI.Elements.MissionPassedScreen.Title"/> set to "mission passed".
            </summary>
            <param name="subtitle">The subtitle, the text below the <see cref="P:RAGENativeUI.Elements.MissionPassedScreen.Title"/>.</param>
            <param name="completionPercentage">The value that will be displayed as the completion percentage.</param>
            <param name="medal">The medal type displayed next to the completion percentage.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.MissionPassedScreen.Show">
            <summary>
            Shows this <see cref="T:RAGENativeUI.Elements.MissionPassedScreen"/>. It will be visible until the user presses <see cref="P:RAGENativeUI.Elements.MissionPassedScreen.ContinueControl"/>, or the returned <see cref="T:Rage.GameFiber"/> is aborted.
            </summary>
            <returns>The <see cref="T:Rage.GameFiber"/> in which this <see cref="T:RAGENativeUI.Elements.MissionPassedScreen"/> is drawn.</returns>
        </member>
        <member name="M:RAGENativeUI.Elements.MissionPassedScreen.OnContinueHit">
            <summary>
            Called when this <see cref="T:RAGENativeUI.Elements.MissionPassedScreen"/> is shown and the user presses <see cref="P:RAGENativeUI.Elements.MissionPassedScreen.ContinueControl"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreenItem.Label">
            <summary>
            Gets or sets the label, the text displayed at the left of this <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/>.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the text displayed at the left of this <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/>.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreenItem.Status">
            <summary>
            Gets or sets the status, the text displayed at the right of this <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/>.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the text displayed at the right of this <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/>.
            </value>
        </member>
        <member name="P:RAGENativeUI.Elements.MissionPassedScreenItem.Tickbox">
            <summary>
            Gets or sets how the tickbox at the right of this <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/> is displayed.
            </summary>
            <value>
            A <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem.TickboxState"/> representing how the tickbox at the right of this <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/> is displayed.
            </value>
        </member>
        <member name="M:RAGENativeUI.Elements.MissionPassedScreenItem.#ctor(System.String,System.String,RAGENativeUI.Elements.MissionPassedScreenItem.TickboxState)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/> class.
            </summary>
            <param name="label">The label, the text displayed at the left of this item.</param>
            <param name="status">The status, the text displayed at the right of this item.</param>
            <param name="tickbox">The <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem.TickboxState"/> representing how the tickbox at the right of this <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/> is displayed.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.MissionPassedScreenItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/> class with <see cref="P:RAGENativeUI.Elements.MissionPassedScreenItem.Tickbox"/> set to <see cref="F:RAGENativeUI.Elements.MissionPassedScreenItem.TickboxState.None"/>.
            </summary>
            <param name="label">The label, the text displayed at the left of this item.</param>
            <param name="status">The status, the text displayed at the right of this item.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.MissionPassedScreenItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.MissionPassedScreenItem"/> class with <see cref="P:RAGENativeUI.Elements.MissionPassedScreenItem.Tickbox"/> set to <see cref="F:RAGENativeUI.Elements.MissionPassedScreenItem.TickboxState.None"/> and <see cref="P:RAGENativeUI.Elements.MissionPassedScreenItem.Status"/> set to an empty <see cref="T:System.String"/>.
            </summary>
            <param name="label">The label, the text displayed at the left of this item.</param>
        </member>
        <member name="T:RAGENativeUI.Elements.ResRectangle">
            <summary>
            A rectangle in 1080 pixels height system.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Elements.ResText">
            <summary>
            A Text object in the 1080 pixels height base system.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.ResText.AddLongString(System.String)">
            <summary>
            Push a long string into the stack.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:RAGENativeUI.Elements.Sprite.#ctor(System.String,System.String,System.Drawing.Point,System.Drawing.Size,System.Single,System.Drawing.Color)">
            <summary>
            Creates a game sprite object from a texture dictionary and texture name.
            </summary>
            <param name="textureDict"></param>
            <param name="textureName"></param>
            <param name="position"></param>
            <param name="size"></param>
            <param name="heading"></param>
            <param name="color"></param>
        </member>
        <member name="M:RAGENativeUI.Elements.Sprite.#ctor(System.String,System.String,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Creates a game sprite object from a texture dictionary and texture name.
            </summary>
            <param name="textureDict"></param>
            <param name="textureName"></param>
            <param name="position"></param>
            <param name="size"></param>
        </member>
        <member name="M:RAGENativeUI.Elements.Sprite.Draw">
            <summary>
            Draws the sprite on a 1080-pixels height base.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.Sprite.DrawTexture(Rage.Texture,System.Drawing.Point,System.Drawing.Size,Rage.GraphicsEventArgs)">
            <summary>
            Draw a custom texture from a file on a 1080-pixels height base.
            </summary>
            <param name="texture">Your custom texture object.</param>
            <param name="position"></param>
            <param name="size"></param>
        </member>
        <member name="M:RAGENativeUI.Elements.Sprite.DrawTexture(Rage.Texture,System.Drawing.Point,System.Drawing.Size,Rage.Graphics)">
            <summary>
            Draws a custom texture from a file on a 1080-pixels height base.
            </summary>
            <param name="texture">Your custom texture object.</param>
            <param name="position"></param>
            <param name="size"></param>
            <param name="graphics"></param>
        </member>
        <member name="M:RAGENativeUI.Elements.Sprite.WriteFileFromResources(System.Reflection.Assembly,System.String)">
            <summary>
            Save an embedded resource to a temporary file.
            </summary>
            <param name="yourAssembly">Your executing assembly.</param>
            <param name="fullResourceName">Resource name including your solution name. E.G MyMenuMod.banner.png</param>
            <returns>Absolute path to the written file.</returns>
        </member>
        <member name="M:RAGENativeUI.Elements.Sprite.WriteFileFromResources(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Save an embedded resource to a concrete path.
            </summary>
            <param name="yourAssembly">Your executing assembly.</param>
            <param name="fullResourceName">Resource name including your solution name. E.G MyMenuMod.banner.png</param>
            <param name="savePath">Path to where save the file, including the filename.</param>
            <returns>Absolute path to the written file.</returns>
        </member>
        <member name="T:RAGENativeUI.Elements.BarTimerBar">
            <summary>
            Represents a timer bar containing a progress bar.
            </summary>
            <seealso cref="T:RAGENativeUI.Elements.TimerBarMarker"/>
        </member>
        <member name="P:RAGENativeUI.Elements.BarTimerBar.Percentage">
            <summary>
            Gets or sets the progress percentage. It determines how filled the progress bar is and
            the valid range is from <c>0.0f</c> to <c>1.0f</c>, values outside this range are clamped.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.BarTimerBar.BackgroundColor">
            <summary>
            Gets or sets the background color of the progress bar.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.BarTimerBar.ForegroundColor">
            <summary>
            Gets or sets the foreground color of the progress bar.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.BarTimerBar.Markers">
            <summary>
            Gets or sets a list containing the <see cref="T:RAGENativeUI.Elements.TimerBarMarker"/>s of the progress bar.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <c>value</c> is null.
            </exception>
        </member>
        <member name="M:RAGENativeUI.Elements.BarTimerBar.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.BarTimerBar"/> class.
            </summary>
            <param name="label">A <see cref="T:System.String"/> that will appear at the left side of the timer bar.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.BarTimerBar.Draw(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:RAGENativeUI.Elements.TimerBarMarker">
            <summary>
            Defines a <see cref="T:RAGENativeUI.Elements.BarTimerBar"/> marker. A marker is represented as a thin line over the progress bar at the specified <see cref="P:RAGENativeUI.Elements.TimerBarMarker.Percentage"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarMarker.Percentage">
            <summary>
            Gets the percentage at which the marker is placed. Its range is from <c>0.0f</c> to <c>1.0f</c>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarMarker.Color">
            <summary>
            Gets the color of the marker.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarMarker.#ctor(System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.TimerBarMarker"/> structure.
            </summary>
            <param name="percentage">
            The percentage at which the marker is placed.
            Valid range is from <c>0.0f</c> to <c>1.0f</c>, values outside this range are clamped.
            </param>
            <param name="color">The color of the marker.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarMarker.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.TimerBarMarker"/> structure with <see cref="P:RAGENativeUI.Elements.TimerBarMarker.Color"/> set to <see cref="P:System.Drawing.Color.Black"/>.
            </summary>
            <param name="percentage">
            The percentage at which the marker is placed.
            Its valid range is from <c>0.0f</c> to <c>1.0f</c>, values outside this range are clamped.
            </param>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarMarker.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarMarker.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarMarker.Equals(RAGENativeUI.Elements.TimerBarMarker)">
            <inheritdoc/>
        </member>
        <member name="T:RAGENativeUI.Elements.CheckpointsTimerBar">
            <summary>
            Represents a timer bar containing a list of checkpoints.
            <para>
            Each checkpoint is drawn as a circle which is either greyed out when not completed, black when failed or of a specific color when completed.
            Additionally, it can be crossed out.
            </para>
            <para>
            The state of the checkpoints is defined using the <see cref="T:RAGENativeUI.Elements.TimerBarCheckpoint"/> class and the <see cref="P:RAGENativeUI.Elements.CheckpointsTimerBar.Checkpoints"/> property.
            </para>
            </summary>
            <see cref="T:RAGENativeUI.Elements.TimerBarCheckpoint"/>
            <see cref="T:RAGENativeUI.Elements.TimerBarCheckpointState"/>
        </member>
        <member name="P:RAGENativeUI.Elements.CheckpointsTimerBar.Checkpoints">
            <summary>
            Gets or sets the list containing the <see cref="T:RAGENativeUI.Elements.TimerBarCheckpoint"/>s of the timer bar.
            The checkpoints are shown from right to left: the checkpoint at index 0 is the right-most circle
            and the last checkpoint in the list is the left-most circle.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <c>value</c> is null.
            </exception>
        </member>
        <member name="M:RAGENativeUI.Elements.CheckpointsTimerBar.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.CheckpointsTimerBar"/> class.
            </summary>
            <param name="label">A <see cref="T:System.String"/> that will appear at the left side of the timer bar.</param>
            <param name="numberOfCheckpoints">Determines the number of <see cref="T:RAGENativeUI.Elements.TimerBarCheckpoint"/>s created initially.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="numberOfCheckpoints"/> is negative.</exception>
        </member>
        <member name="M:RAGENativeUI.Elements.CheckpointsTimerBar.Draw(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:RAGENativeUI.Elements.TimerBarCheckpointState">
            <summary>
            Specifies the state of a <see cref="T:RAGENativeUI.Elements.TimerBarCheckpoint"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TimerBarCheckpointState.InProgress">
            <summary>
            Represents an unfinished objective. Shown as a grey circle.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TimerBarCheckpointState.Completed">
            <summary>
            Represents a successfully completed objective. Shown as a circle with color <see cref="P:RAGENativeUI.Elements.TimerBarCheckpoint.Color"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TimerBarCheckpointState.Failed">
            <summary>
            Represents a failed objective. Shown as a black circle.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Elements.TimerBarCheckpoint">
            <summary>
            Represents a checkpoint of a <see cref="T:RAGENativeUI.Elements.CheckpointsTimerBar"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarCheckpoint.State">
            <summary>
            Gets or sets the current state of this checkpoint.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarCheckpoint.IsCrossedOut">
            <summary>
            Gets or sets whether the checkpoint is crossed out.
            If <c>true</c>, a cross is drawn on top of the checkpoint circle, otherwise, nothing is drawn on top.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarCheckpoint.Color">
            <summary>
            Gets or sets the color used to draw the checkpoint when <see cref="P:RAGENativeUI.Elements.TimerBarCheckpoint.State"/> is set to <see cref="F:RAGENativeUI.Elements.TimerBarCheckpointState.Completed"/>.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarCheckpoint.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.TimerBarCheckpoint"/> class with the given color.
            </summary>
            <param name="color">The color used to draw the checkpoint when <see cref="P:RAGENativeUI.Elements.TimerBarCheckpoint.State"/> is set to <see cref="F:RAGENativeUI.Elements.TimerBarCheckpointState.Completed"/></param>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarCheckpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.TimerBarCheckpoint"/> class with <see cref="P:RAGENativeUI.Elements.TimerBarCheckpoint.Color"/> set to <see cref="P:System.Drawing.Color.White"/>.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Elements.IconsTimerBar">
            <summary>
            Represents a timer bar containing icons at the right side.
            </summary>
            <seealso cref="T:RAGENativeUI.Elements.TimerBarIcon"/>
        </member>
        <member name="P:RAGENativeUI.Elements.IconsTimerBar.Icons">
            <summary>
            Gets or sets the list containing the <see cref="T:RAGENativeUI.Elements.TimerBarIcon"/>s of the timer bar.
            The icons are shown from right to left: the icons at index 0 is the right-most one
            and the last icon in the list is the left-most one.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <c>value</c> is null.
            </exception>
        </member>
        <member name="M:RAGENativeUI.Elements.IconsTimerBar.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.IconsTimerBar"/> class.
            </summary>
            <param name="label">A <see cref="T:System.String"/> that will appear at the left side of the timer bar.</param>
        </member>
        <member name="M:RAGENativeUI.Elements.IconsTimerBar.Draw(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:RAGENativeUI.Elements.TimerBarIcon">
            <summary>
            Represents an icon of a <see cref="T:RAGENativeUI.Elements.IconsTimerBar"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TimerBarIcon.DefaultSize">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.Elements.TimerBarIcon.Size"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TimerBarIcon.DefaultSpacing">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.Elements.TimerBarIcon.Spacing"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TimerBarIcon.DefaultColor">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.Elements.TimerBarIcon.Color"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarIcon.TextureDictionary">
            <summary>
            Gets or sets the texture dictionary that contains the texture.
            </summary>
            <exception cref="T:System.ArgumentException">If <c>value</c> is <c>null</c>, empty or white-space.</exception>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarIcon.TextureName">
            <summary>
            Gets or sets the name of the texture.
            </summary>
            <exception cref="T:System.ArgumentException">If <c>value</c> is <c>null</c>, empty or white-space.</exception>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarIcon.Size">
            <summary>
            Gets or sets the size of this icon, in relative coordinates.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarIcon.Spacing">
            <summary>
            Gets or sets how much space there is between this icon and the one to its left, in relative coordinates along the X-axis.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarIcon.Color">
            <summary>
            Gets or sets the color of this icon.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarIcon.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:RAGENativeUI.Elements.TimerBarIcon"/> class.
            </summary>
            <param name="textureDictionary">The texture dictionary that contains the texture.</param>
            <param name="textureName">The name of the texture.</param>
            <exception cref="T:System.ArgumentException">If <paramref name="textureDictionary"/> or <paramref name="textureName"/> are <c>null</c>, empty or white-space.</exception>
        </member>
        <member name="T:RAGENativeUI.Elements.TextTimerBar">
            <summary>
            Represents a timer bar with text located at the right side.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TextTimerBar.DefaultTextStyle">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.Elements.TextTimerBar.TextStyle"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TextTimerBar.DefaultTextOffset">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.Elements.TextTimerBar.TextOffset"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TextTimerBar.Text">
            <summary>
            Gets or sets the text. This is the <see cref="T:System.String"/> that appears at the right side of the timer bar.
            </summary>
            <exception cref="T:System.ArgumentNullException"><c>value</c> is <c>null</c>.</exception>
        </member>
        <member name="P:RAGENativeUI.Elements.TextTimerBar.TextStyle">
            <summary>
            Gets or sets the text style.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TextTimerBar.TextOffset">
            <summary>
            Gets or sets the position offset of the text in relative coordinates.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.TextTimerBar.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.TextTimerBar"/> class.
            </summary>
            <param name="label">A <see cref="T:System.String"/> that will appear at the left side of the timer bar.</param>
            <param name="text">A <see cref="T:System.String"/> that will appear at the right side of the timer bar.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/> or <paramref name="text"/> are <c>null</c>.</exception>
        </member>
        <member name="M:RAGENativeUI.Elements.TextTimerBar.Draw(System.Single,System.Single)">
            <inheritdoc/>
        </member>
        <member name="T:RAGENativeUI.Elements.TB">
            <summary>
            Internal timer bars constants.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TB.MarkerTextureName">
            <summary>
            We use the texture with the marker at 50% because the game only has textures for every 10% interval,
            but here we support any percentage and the 50% texture is the easiest one to offset.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Elements.TimerBarBase">
            <summary>
            Defines the base class for timer bars.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TimerBarBase.DefaultLabelStyle">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.Elements.TimerBarBase.LabelStyle"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.Elements.TimerBarBase.DefaultLabelOffset">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.Elements.TimerBarBase.LabelOffset"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarBase.Label">
            <summary>
            Gets or sets the label. This is the <see cref="T:System.String"/> that appears at the left side of the timer bar.
            </summary>
            <exception cref="T:System.ArgumentNullException"><c>value</c> is <c>null</c>.</exception>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarBase.LabelStyle">
            <summary>
            Gets or sets the label style.
            </summary>
            <remarks>
            Note, the <c>End</c> value of the property <see cref="P:RAGENativeUI.TextStyle.Wrap"/> is slightly modified
            when applying the style based on the current aspect ratio.
            </remarks>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarBase.LabelOffset">
            <summary>
            Gets or sets the position offset of the label in relative coordinates.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarBase.Highlight">
            <summary>
            Gets or sets the current highlight color. If not <c>null</c>, the timer bar background is drawn with an overlay of the specified color.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarBase.Accent">
            <summary>
            Gets or sets the current accent color. If not <c>null</c>, a thin line of the specified color is drawn at the right border of the timer bar.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Elements.TimerBarBase.Thin">
            <summary>
            Gets or sets the height of this timer bar.
            If <c>false</c>, it uses the default height (like <see cref="T:RAGENativeUI.Elements.TextTimerBar"/>),
            otherwise, it uses a slightly smaller height (like <see cref="T:RAGENativeUI.Elements.BarTimerBar"/>).
            </summary>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.Elements.TimerBarBase"/> class.
            </summary>
            <param name="label">A <see cref="T:System.String"/> that will appear at the left side of the timer bar.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/> is <c>null</c>.</exception>
        </member>
        <member name="M:RAGENativeUI.Elements.TimerBarBase.Draw(System.Single,System.Single)">
            <summary>
            Draws this timer bar at the specified position.
            </summary>
            <param name="x">The X-position in relative coordinates.</param>
            <param name="y">The Y-position in relative coordinates.</param>
        </member>
        <member name="T:RAGENativeUI.HudColor">
            <summary>
            Defines identifiers that represent the game HUD colors.
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PureWhite">
            <summary>
            Represents the HUD color "HUD_COLOUR_PURE_WHITE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.White">
            <summary>
            Represents the HUD color "HUD_COLOUR_WHITE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Black">
            <summary>
            Represents the HUD color "HUD_COLOUR_BLACK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Grey">
            <summary>
            Represents the HUD color "HUD_COLOUR_GREY".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.GreyLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_GREYLIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.GreyDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_GREYDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Red">
            <summary>
            Represents the HUD color "HUD_COLOUR_RED".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.RedLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_REDLIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.RedDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_REDDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Blue">
            <summary>
            Represents the HUD color "HUD_COLOUR_BLUE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.BlueLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_BLUELIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.BlueDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_BLUEDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Yellow">
            <summary>
            Represents the HUD color "HUD_COLOUR_YELLOW".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.YellowLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_YELLOWLIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.YellowDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_YELLOWDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Orange">
            <summary>
            Represents the HUD color "HUD_COLOUR_ORANGE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.OrangeLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_ORANGELIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.OrangeDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_ORANGEDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Green">
            <summary>
            Represents the HUD color "HUD_COLOUR_GREEN".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.GreenLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_GREENLIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.GreenDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_GREENDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Purple">
            <summary>
            Represents the HUD color "HUD_COLOUR_PURPLE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PurpleLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_PURPLELIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PurpleDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_PURPLEDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Pink">
            <summary>
            Represents the HUD color "HUD_COLOUR_PINK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.RadarHealth">
            <summary>
            Represents the HUD color "HUD_COLOUR_RADAR_HEALTH".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.RadarArmour">
            <summary>
            Represents the HUD color "HUD_COLOUR_RADAR_ARMOUR".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.RadarDamage">
            <summary>
            Represents the HUD color "HUD_COLOUR_RADAR_DAMAGE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer1">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER1".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer2">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER2".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer3">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER3".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer4">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER4".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer5">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER5".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer6">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER6".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer7">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER7".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer8">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER8".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer9">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER9".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer10">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER10".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer11">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER11".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer12">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER12".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer13">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER13".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer14">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER14".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer15">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER15".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer16">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER16".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer17">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER17".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer18">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER18".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer19">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER19".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer20">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER20".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer21">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER21".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer22">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER22".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer23">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER23".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer24">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER24".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer25">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER25".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer26">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER26".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer27">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER27".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer28">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER28".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer29">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER29".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer30">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER30".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer31">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER31".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer32">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER32".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.SimpleBlipDefault">
            <summary>
            Represents the HUD color "HUD_COLOUR_SIMPLEBLIP_DEFAULT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuBlue">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_BLUE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuGreyLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_GREY_LIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuBlueExtraDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_BLUE_EXTRA_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuYellow">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_YELLOW".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuYellowDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_YELLOW_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuGreen">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_GREEN".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuGrey">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_GREY".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuGreyDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_GREY_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuHighlight">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_HIGHLIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuStandard">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_STANDARD".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuDimmed">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_DIMMED".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MenuExtraDimmed">
            <summary>
            Represents the HUD color "HUD_COLOUR_MENU_EXTRA_DIMMED".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.BriefTitle">
            <summary>
            Represents the HUD color "HUD_COLOUR_BRIEF_TITLE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MidGreyMultiplayer">
            <summary>
            Represents the HUD color "HUD_COLOUR_MID_GREY_MP".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer1Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER1_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer2Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER2_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer3Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER3_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer4Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER4_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer5Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER5_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer6Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER6_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer7Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER7_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer8Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER8_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer9Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER9_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer10Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER10_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer11Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER11_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer12Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER12_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer13Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER13_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer14Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER14_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer15Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER15_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer16Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER16_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer17Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER17_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer18Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER18_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer19Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER19_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer20Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER20_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer21Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER21_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer22Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER22_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer23Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER23_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer24Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER24_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer25Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER25_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer26Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER26_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer27Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER27_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer28Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER28_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer29Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER29_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer30Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER30_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer31Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER31_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NetPlayer32Dark">
            <summary>
            Represents the HUD color "HUD_COLOUR_NET_PLAYER32_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Bronze">
            <summary>
            Represents the HUD color "HUD_COLOUR_BRONZE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Silver">
            <summary>
            Represents the HUD color "HUD_COLOUR_SILVER".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Gold">
            <summary>
            Represents the HUD color "HUD_COLOUR_GOLD".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Platinum">
            <summary>
            Represents the HUD color "HUD_COLOUR_PLATINUM".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Gang1">
            <summary>
            Represents the HUD color "HUD_COLOUR_GANG1".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Gang2">
            <summary>
            Represents the HUD color "HUD_COLOUR_GANG2".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Gang3">
            <summary>
            Represents the HUD color "HUD_COLOUR_GANG3".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Gang4">
            <summary>
            Represents the HUD color "HUD_COLOUR_GANG4".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.SameCrew">
            <summary>
            Represents the HUD color "HUD_COLOUR_SAME_CREW".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Freemode">
            <summary>
            Represents the HUD color "HUD_COLOUR_FREEMODE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PauseBackground">
            <summary>
            Represents the HUD color "HUD_COLOUR_PAUSE_BG".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Friendly">
            <summary>
            Represents the HUD color "HUD_COLOUR_FRIENDLY".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Enemy">
            <summary>
            Represents the HUD color "HUD_COLOUR_ENEMY".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Location">
            <summary>
            Represents the HUD color "HUD_COLOUR_LOCATION".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Pickup">
            <summary>
            Represents the HUD color "HUD_COLOUR_PICKUP".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PauseSingleplayer">
            <summary>
            Represents the HUD color "HUD_COLOUR_PAUSE_SINGLEPLAYER".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.FreemodeDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_FREEMODE_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.InactiveMission">
            <summary>
            Represents the HUD color "HUD_COLOUR_INACTIVE_MISSION".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Damage">
            <summary>
            Represents the HUD color "HUD_COLOUR_DAMAGE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PinkLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_PINKLIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PmMItemHighlight">
            <summary>
            Represents the HUD color "HUD_COLOUR_PM_MITEM_HIGHLIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.ScriptVariable">
            <summary>
            Represents the HUD color "HUD_COLOUR_SCRIPT_VARIABLE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Yoga">
            <summary>
            Represents the HUD color "HUD_COLOUR_YOGA".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Tennis">
            <summary>
            Represents the HUD color "HUD_COLOUR_TENNIS".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Golf">
            <summary>
            Represents the HUD color "HUD_COLOUR_GOLF".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.ShootingRange">
            <summary>
            Represents the HUD color "HUD_COLOUR_SHOOTING_RANGE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.FlightSchool">
            <summary>
            Represents the HUD color "HUD_COLOUR_FLIGHT_SCHOOL".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NorthBlue">
            <summary>
            Represents the HUD color "HUD_COLOUR_NORTH_BLUE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.SocialClub">
            <summary>
            Represents the HUD color "HUD_COLOUR_SOCIAL_CLUB".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PlatformBlue">
            <summary>
            Represents the HUD color "HUD_COLOUR_PLATFORM_BLUE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PlatformGreen">
            <summary>
            Represents the HUD color "HUD_COLOUR_PLATFORM_GREEN".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PlatformGrey">
            <summary>
            Represents the HUD color "HUD_COLOUR_PLATFORM_GREY".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.FacebookBlue">
            <summary>
            Represents the HUD color "HUD_COLOUR_FACEBOOK_BLUE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.InGameBackground">
            <summary>
            Represents the HUD color "HUD_COLOUR_INGAME_BG".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Darts">
            <summary>
            Represents the HUD color "HUD_COLOUR_DARTS".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Waypoint">
            <summary>
            Represents the HUD color "HUD_COLOUR_WAYPOINT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Michael">
            <summary>
            Represents the HUD color "HUD_COLOUR_MICHAEL".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Franklin">
            <summary>
            Represents the HUD color "HUD_COLOUR_FRANKLIN".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Trevor">
            <summary>
            Represents the HUD color "HUD_COLOUR_TREVOR".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.GolfP1">
            <summary>
            Represents the HUD color "HUD_COLOUR_GOLF_P1".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.GolfP2">
            <summary>
            Represents the HUD color "HUD_COLOUR_GOLF_P2".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.GolfP3">
            <summary>
            Represents the HUD color "HUD_COLOUR_GOLF_P3".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.GolfP4">
            <summary>
            Represents the HUD color "HUD_COLOUR_GOLF_P4".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.WaypointLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_WAYPOINTLIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.WaypointDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_WAYPOINTDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PanelLight">
            <summary>
            Represents the HUD color "HUD_COLOUR_PANEL_LIGHT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.MichaelDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_MICHAEL_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.FranklinDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_FRANKLIN_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.TrevorDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_TREVOR_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.ObjectiveRoute">
            <summary>
            Represents the HUD color "HUD_COLOUR_OBJECTIVE_ROUTE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PauseMapTint">
            <summary>
            Represents the HUD color "HUD_COLOUR_PAUSEMAP_TINT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PauseDeselect">
            <summary>
            Represents the HUD color "HUD_COLOUR_PAUSE_DESELECT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PmWeaponsPurchasable">
            <summary>
            Represents the HUD color "HUD_COLOUR_PM_WEAPONS_PURCHASABLE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PmWeaponsLocked">
            <summary>
            Represents the HUD color "HUD_COLOUR_PM_WEAPONS_LOCKED".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.EndScreenBackground">
            <summary>
            Represents the HUD color "HUD_COLOUR_END_SCREEN_BG".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Chop">
            <summary>
            Represents the HUD color "HUD_COLOUR_CHOP".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.PauseMapTintHalf">
            <summary>
            Represents the HUD color "HUD_COLOUR_PAUSEMAP_TINT_HALF".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.NorthBlueOfficial">
            <summary>
            Represents the HUD color "HUD_COLOUR_NORTH_BLUE_OFFICIAL".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.ScriptVariable2">
            <summary>
            Represents the HUD color "HUD_COLOUR_SCRIPT_VARIABLE_2".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.H">
            <summary>
            Represents the HUD color "HUD_COLOUR_H".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.HDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_HDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.T">
            <summary>
            Represents the HUD color "HUD_COLOUR_T".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.TDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_TDARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.HShard">
            <summary>
            Represents the HUD color "HUD_COLOUR_HSHARD".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.ControllerMichael">
            <summary>
            Represents the HUD color "HUD_COLOUR_CONTROLLER_MICHAEL".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.ControllerFranklin">
            <summary>
            Represents the HUD color "HUD_COLOUR_CONTROLLER_FRANKLIN".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.ControllerTrevor">
            <summary>
            Represents the HUD color "HUD_COLOUR_CONTROLLER_TREVOR".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.ControllerChop">
            <summary>
            Represents the HUD color "HUD_COLOUR_CONTROLLER_CHOP".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.VideoEditorVideo">
            <summary>
            Represents the HUD color "HUD_COLOUR_VIDEO_EDITOR_VIDEO".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.VideoEditorAudio">
            <summary>
            Represents the HUD color "HUD_COLOUR_VIDEO_EDITOR_AUDIO".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.VideoEditorText">
            <summary>
            Represents the HUD color "HUD_COLOUR_VIDEO_EDITOR_TEXT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.HbBlue">
            <summary>
            Represents the HUD color "HUD_COLOUR_HB_BLUE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.HbYellow">
            <summary>
            Represents the HUD color "HUD_COLOUR_HB_YELLOW".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.VideoEditorScore">
            <summary>
            Represents the HUD color "HUD_COLOUR_VIDEO_EDITOR_SCORE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.VideoEditorAudioFadeout">
            <summary>
            Represents the HUD color "HUD_COLOUR_VIDEO_EDITOR_AUDIO_FADEOUT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.VideoEditorTextFadeout">
            <summary>
            Represents the HUD color "HUD_COLOUR_VIDEO_EDITOR_TEXT_FADEOUT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.VideoEditorScoreFadeout">
            <summary>
            Represents the HUD color "HUD_COLOUR_VIDEO_EDITOR_SCORE_FADEOUT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.HeistBackground">
            <summary>
            Represents the HUD color "HUD_COLOUR_HEIST_BACKGROUND".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.VideoEditorAmbient">
            <summary>
            Represents the HUD color "HUD_COLOUR_VIDEO_EDITOR_AMBIENT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.VideoEditorAmbientFadeout">
            <summary>
            Represents the HUD color "HUD_COLOUR_VIDEO_EDITOR_AMBIENT_FADEOUT".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Gb">
            <summary>
            Represents the HUD color "HUD_COLOUR_GB".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G">
            <summary>
            Represents the HUD color "HUD_COLOUR_G".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.B">
            <summary>
            Represents the HUD color "HUD_COLOUR_B".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.LowFlow">
            <summary>
            Represents the HUD color "HUD_COLOUR_LOW_FLOW".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.LowFlowDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_LOW_FLOW_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G1">
            <summary>
            Represents the HUD color "HUD_COLOUR_G1".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G2">
            <summary>
            Represents the HUD color "HUD_COLOUR_G2".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G3">
            <summary>
            Represents the HUD color "HUD_COLOUR_G3".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G4">
            <summary>
            Represents the HUD color "HUD_COLOUR_G4".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G5">
            <summary>
            Represents the HUD color "HUD_COLOUR_G5".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G6">
            <summary>
            Represents the HUD color "HUD_COLOUR_G6".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G7">
            <summary>
            Represents the HUD color "HUD_COLOUR_G7".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G8">
            <summary>
            Represents the HUD color "HUD_COLOUR_G8".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G9">
            <summary>
            Represents the HUD color "HUD_COLOUR_G9".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G10">
            <summary>
            Represents the HUD color "HUD_COLOUR_G10".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G11">
            <summary>
            Represents the HUD color "HUD_COLOUR_G11".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G12">
            <summary>
            Represents the HUD color "HUD_COLOUR_G12".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G13">
            <summary>
            Represents the HUD color "HUD_COLOUR_G13".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G14">
            <summary>
            Represents the HUD color "HUD_COLOUR_G14".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.G15">
            <summary>
            Represents the HUD color "HUD_COLOUR_G15".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Adversary">
            <summary>
            Represents the HUD color "HUD_COLOUR_ADVERSARY".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.DegenRed">
            <summary>
            Represents the HUD color "HUD_COLOUR_DEGEN_RED".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.DegenYellow">
            <summary>
            Represents the HUD color "HUD_COLOUR_DEGEN_YELLOW".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.DegenGreen">
            <summary>
            Represents the HUD color "HUD_COLOUR_DEGEN_GREEN".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.DegenCyan">
            <summary>
            Represents the HUD color "HUD_COLOUR_DEGEN_CYAN".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.DegenBlue">
            <summary>
            Represents the HUD color "HUD_COLOUR_DEGEN_BLUE".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.DegenMagenta">
            <summary>
            Represents the HUD color "HUD_COLOUR_DEGEN_MAGENTA".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Stunt1">
            <summary>
            Represents the HUD color "HUD_COLOUR_STUNT_1".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Stunt2">
            <summary>
            Represents the HUD color "HUD_COLOUR_STUNT_2".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.SpecialRaceSeries">
            <summary>
            Represents the HUD color "HUD_COLOUR_SPECIAL_RACE_SERIES".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.SpecialRaceSeriesDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_SPECIAL_RACE_SERIES_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.Cs">
            <summary>
            Represents the HUD color "HUD_COLOUR_CS".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.CsDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_CS_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.TechGreen">
            <summary>
            Represents the HUD color "HUD_COLOUR_TECH_GREEN".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.TechGreenDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_TECH_GREEN_DARK".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.TechRed">
            <summary>
            Represents the HUD color "HUD_COLOUR_TECH_RED".
            </summary>
        </member>
        <member name="F:RAGENativeUI.HudColor.TechGreenVeryDark">
            <summary>
            Represents the HUD color "HUD_COLOUR_TECH_GREEN_VERY_DARK".
            </summary>
        </member>
        <member name="T:RAGENativeUI.HudColorExtensions">
            <summary>
            Contains extensions methods for <see cref="T:RAGENativeUI.HudColor"/>.
            </summary>
        </member>
        <member name="M:RAGENativeUI.HudColorExtensions.GetColor(RAGENativeUI.HudColor)">
             <summary>
             Gets the RGBA value of the specified HUD color.
             </summary>
            <param name="hudColor">The HUD color.</param>
        </member>
        <member name="M:RAGENativeUI.HudColorExtensions.SetColor(RAGENativeUI.HudColor,System.Drawing.Color)">
            <summary>
            Sets the RGBA value of the specified HUD color.
            </summary>
            <param name="hudColor">The HUD color.</param>
            <param name="color">The new color value.</param>
        </member>
        <member name="M:RAGENativeUI.HudColorExtensions.GetName(RAGENativeUI.HudColor)">
            <summary>
            Gets the real name of the specified HUD color. For example, for <see cref="F:RAGENativeUI.HudColor.PureWhite"/> it will return "HUD_COLOUR_PURE_WHITE".
            </summary>
            <remarks>
            One of the uses of the returned name is changing the color of the text from notifications, help messages or subtitles.
            <code lang="C#" title="Usage example in a notification">
            Game.DisplayHelp($"~{HudColor.Red.GetName()}~Now this text is red!");
            </code>
            </remarks>
            <param name="hudColor">The HUD color.</param>
        </member>
        <member name="P:RAGENativeUI.Internals.Screen.ActualResolution">
            <summary>
            Gets the resolution of the main screen, the one containing the UI in case multiple screens are used.
            </summary>
        </member>
        <member name="T:RAGENativeUI.Internals.Stubs">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Internals.Stubs.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Internals.Stubs.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Internals.Stubs.EmbeddedTextures">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:RAGENativeUI.Internals.Stubs.TokenParser">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:RAGENativeUI.Localization.SystemLanguage">
            <summary>
            Gets the system language. This is the same as the Rockstar Games Launcher language setting.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Localization.Language">
            <summary>
            Gets the user interface language.
            This is normally the same as <see cref="P:RAGENativeUI.Localization.SystemLanguage"/> unless the <c>-uilanguage</c> command line argument is used.
            </summary>
        </member>
        <member name="P:RAGENativeUI.Localization.PrefersMetricMeasurements">
            <summary>
            Gets whether the measurement system setting is assigned to metric instead of imperial.
            </summary>
            <returns>
            <c>true</c> if the metric system is preferred;
            otherwise, <c>false</c> and the imperial system is preferred.
            </returns>
        </member>
        <member name="M:RAGENativeUI.Localization.DoesTextExist(System.String)">
            <summary>
            Gets whether the specified text label is valid.
            </summary>
            <param name="labelId">The text label ID.</param>
            <returns><c>true</c> if the text label is valid; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="labelId"/> is <c>null</c>.</exception>
        </member>
        <member name="M:RAGENativeUI.Localization.DoesTextExist(System.UInt32)">
            <summary>
            Gets whether the specified text label is valid.
            </summary>
            <param name="labelIdHash">The hash of the text label ID.</param>
            <returns><c>true</c> if the text label is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RAGENativeUI.Localization.GetText(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> of a text label.
            </summary>
            <param name="labelId">The text label ID.</param>
            <returns>The <see cref="T:System.String"/> of the text label if it exists; otherwise, <c>"NULL"</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="labelId"/> is <c>null</c>.</exception>
        </member>
        <member name="M:RAGENativeUI.Localization.GetText(System.UInt32)">
            <summary>
            Gets the <see cref="T:System.String"/> of a text label.
            </summary>
            <param name="labelIdHash">The hash of the text label ID.</param>
            <returns>The <see cref="T:System.String"/> of the text label if it exists; otherwise, <c>"NULL"</c>.</returns>
        </member>
        <member name="M:RAGENativeUI.Localization.SetText(System.String,System.String)">
            <summary>
            Sets the <see cref="T:System.String"/> of a text label.
            If the text label already exists, its value gets overwritten;
            otherwise, a new text label with the specified value is created.
            </summary>
            <param name="labelId">The text label ID.</param>
            <param name="value">The new <see cref="T:System.String"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="labelId"/> or <paramref name="value"/> are <c>null</c>.</exception>
        </member>
        <member name="M:RAGENativeUI.Localization.SetText(System.UInt32,System.String)">
            <summary>
            Sets the <see cref="T:System.String"/> of a text label.
            If the text label already exists, its value gets overwritten;
            otherwise, a new text label with the specified value is create.
            </summary>
            <param name="labelIdHash">The hash of the text label ID.</param>
            <param name="value">The new <see cref="T:System.String"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
        </member>
        <member name="M:RAGENativeUI.Localization.ClearTextOverride(System.String)">
            <summary>
            Removes the text label value previously set with <see cref="M:RAGENativeUI.Localization.SetText(System.String,System.String)"/> or <see cref="M:RAGENativeUI.Localization.SetText(System.UInt32,System.String)"/>.
            If the text label was initially loaded from a .gxt2 file, its value is changed back to its original <see cref="T:System.String"/>;
            otherwise, the text label is deleted.
            </summary>
            <param name="labelId">The text label ID.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="labelId"/> is <c>null</c>.</exception>
        </member>
        <member name="M:RAGENativeUI.Localization.ClearTextOverride(System.UInt32)">
            <summary>
            Removes the text label value previously set with <see cref="M:RAGENativeUI.Localization.SetText(System.String,System.String)"/> or <see cref="M:RAGENativeUI.Localization.SetText(System.UInt32,System.String)"/>.
            If the text label was initially loaded from a .gxt2 file, its value is changed back to its original <see cref="T:System.String"/>;
            otherwise, the text label is deleted.
            </summary>
            <param name="labelIdHash">The hash of the text label ID.</param>
        </member>
        <member name="M:RAGENativeUI.Localization.FromUtf8(System.IntPtr)">
            <summary>
            Converts a null-terminated UTF-8 string to a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Localization.ToUtf8(System.String)">
            <summary>
            Converts a <see cref="T:System.String"/> to an unmanaged null-terminated UTF-8 string, allocated using the game allocator.
            </summary>
        </member>
        <member name="M:RAGENativeUI.Localization.FreeUtf8(System.IntPtr)">
            <summary>
            Frees a UTF-8 string previously allocated by <see cref="M:RAGENativeUI.Localization.ToUtf8(System.String)"/>.
            </summary>
        </member>
        <member name="T:RAGENativeUI.MenuPool">
            <summary>
            Helper class that handles all of your Menus. After instatiating it, you will have to add your menu by using the Add method.
            </summary>
        </member>
        <member name="M:RAGENativeUI.MenuPool.AddSubMenu(RAGENativeUI.UIMenu,System.String)">
            <summary>
            Create and add a submenu to the menu pool.
            Adds an item with the given text to the menu, creates a corresponding submenu, and binds the submenu to the item.
            The submenu inherits its title from the menu, and its subtitle from the item text.
            </summary>
            <param name="menu">The parent menu to which the submenu must be added.</param>
            <param name="text">The name of the submenu.</param>
            <returns>The newly created submenu.</returns>
        </member>
        <member name="M:RAGENativeUI.MenuPool.RefreshIndex">
            <summary>
            Refresh index of every menu in the pool.
            Use this after you have finished constructing the entire menu pool.
            </summary>
        </member>
        <member name="M:RAGENativeUI.MenuPool.ToList">
            <summary>
            Returns all of your menus.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RAGENativeUI.MenuPool.ProcessControl">
            <summary>
            Processes all of your visible menus' controls.
            </summary>
        </member>
        <member name="M:RAGENativeUI.MenuPool.ProcessMouse">
            <summary>
            Processes all of your visible menus' mouses.
            </summary>
        </member>
        <member name="M:RAGENativeUI.MenuPool.Draw">
            <summary>
            Draws all visible menus.
            </summary>
        </member>
        <member name="M:RAGENativeUI.MenuPool.IsAnyMenuOpen">
            <summary>
            Checks if any menu is currently visible.
            </summary>
            <returns>true if at least one menu is visible, false if not.</returns>
        </member>
        <member name="M:RAGENativeUI.MenuPool.ProcessMenus">
            <summary>
            Process all of your menus' functions. Call this in a tick event.
            </summary>
        </member>
        <member name="M:RAGENativeUI.MenuPool.DrawBanners(Rage.GraphicsEventArgs)">
            <summary>
            Draw all of your menus' custom banners.
            </summary>
            <param name="canvas">Canvas to draw on.</param>
        </member>
        <member name="M:RAGENativeUI.MenuPool.DrawBanners(Rage.Graphics)">
            <summary>
            Draw all of your menus' custom banners.
            </summary>
            <param name="g">The <see cref="T:Rage.Graphics"/> to draw on.</param>
        </member>
        <member name="M:RAGENativeUI.MenuPool.CloseAllMenus">
            <summary>
            Closes all of your menus.
            </summary>
        </member>
        <member name="M:RAGENativeUI.MenuPool.ResetMenus(System.Boolean,System.Boolean)">
            <summary>
            Sets the index of all lists to 0 and unchecks all the checkboxes from your menus. 
            </summary>
            <param name="resetLists">If true the index of all lists will be set to 0.</param>
            <param name="resetCheckboxes">If true all the checkboxes will be unchecked.</param>
        </member>
        <member name="M:RAGENativeUI.N.SetTextJustification(System.Int32)">
            <param name="type">
            <para>0: Center-Justify</para>
            <para>1: Left-Justify</para>
            <para>2: Right-Justify, requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen.</para>
            </param>
        </member>
        <member name="M:RAGENativeUI.N.SetTextWrap(System.Single,System.Single)">
            <summary>
            It sets the text in a specified box and wraps the text if it exceeds the boundaries.
            Both values are for X axis. Useful when positioning text set to center or aligned to the right.  
            </summary>
            <param name="start">Left boundary on screen position (0.0 - 1.0).</param>
            <param name="end">Right boundary on screen position (0.0 - 1.0).</param>
        </member>
        <member name="M:RAGENativeUI.N.SetScriptGfxAlign(System.Char,System.Char)">
            <summary>
            This function anchors script draws to a side of the safe zone. This needs to be called to make the interface independent of the player's safe zone configuration.
            </summary>
            <param name="alignX">
            The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
            <para>
            C (67) - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with the right side of the screen.
            </para>
            <para>
            L (76) - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when centered.
            </para>
            <para>
            R (82) - Right: DRAW_TEXT starts on the left side(normal 0,0), while DRAW_RECT starts some short distance away from the right side of the screen, both move with the right side of the screen.
            </para>
            </param>
            <param name="alignY">
            The vertical alignment.This can be 67 ('C'), 66 ('B'), or 84 ('T').
            <para>
            B (66) - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about rather centered.
            </para>
            <para>
            C (67) - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is different from 66.
            </para>
            <para>
            T (84) - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.
            </para>
            </param>
            <remarks>
            Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The canonical value for this is 'I' (73).
            </remarks>
        </member>
        <member name="M:RAGENativeUI.N.SetScriptGfxAlignParams(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the draw offset/calculated size for SET_SCRIPT_GFX_ALIGN. 
            If using any alignment other than left/top, the game expects the width/height to be configured 
            using this native in order to get a proper starting position for the draw command.
            </summary>
            <param name="x">The X offset for the item to be drawn.</param>
            <param name="y">The Y offset for the item to be drawn.</param>
            <param name="w">The width of the item to be drawn.</param>
            <param name="h">The height of the item to be drawn.</param>
        </member>
        <member name="M:RAGENativeUI.N.x5B73C77D9EB66E24(System.Boolean)">
            <summary>
            If true, in multiple-screens setups, limits the range of GameControl.CursorX to only the main screen.
            </summary>
        </member>
        <member name="P:RAGENativeUI.PauseMenu.TabInteractiveListItem.BackingMenu">
            <summary>
            Gets the hidden menu that holds the items and handles the input logic.
            </summary>
            <remarks>
            This <see cref="T:RAGENativeUI.UIMenu"/> does not require a <see cref="T:RAGENativeUI.MenuPool"/>, it is fully managed by the <see cref="T:RAGENativeUI.PauseMenu.TabInteractiveListItem"/>.
            </remarks>
        </member>
        <member name="M:RAGENativeUI.PauseMenu.MissionLogo.#ctor(Rage.Texture)">
            <summary>
            Create a logo from an external picture.
            </summary>
            <param name="filepath">Path to the picture</param>
        </member>
        <member name="M:RAGENativeUI.PauseMenu.MissionLogo.#ctor(System.String,System.String)">
            <summary>
            Create a mission logo from a game texture.
            </summary>
            <param name="textureDict">Name of the texture dictionary</param>
            <param name="textureName">Name of the texture.</param>
        </member>
        <member name="P:RAGENativeUI.PauseMenu.TabSubmenuItem.Index">
            <summary>
            Gets or sets the current selected item's index. Set to -1 if no selection exists, for example, when <see cref="P:RAGENativeUI.PauseMenu.TabSubmenuItem.Items"/> is empty.
            </summary>
        </member>
        <member name="M:RAGENativeUI.PauseMenu.TabSubmenuItem.Draw">
            <summary>
            Draws this instance.
            </summary>
        </member>
        <member name="P:RAGENativeUI.PauseMenu.TabView.NumberOfVisiblePauseMenus">
            <summary>
            Keeps track of the number of visible pause menus from the executing plugin.
            Used to keep <see cref="P:RAGENativeUI.Internals.Shared.NumberOfVisiblePauseMenus"/> consistent when unloading the plugin with some menu open.
            </summary>
        </member>
        <member name="P:RAGENativeUI.PauseMenu.TabView.IsAnyPauseMenuVisible">
            <summary>
            Gets whether any pause menu is currently visible. Includes pause menus from the executing plugin and from other plugins.
            </summary>
        </member>
        <member name="P:RAGENativeUI.PauseMenu.TabView.PlayBackgroundEffect">
            <summary>
            Gets or sets whether the background effect plays when the menu is open.
            </summary>
        </member>
        <member name="M:RAGENativeUI.StringMeasurer.MeasureString(System.String)">
            <summary>
            Measures width of a 0.35 scale string.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:RAGENativeUI.TextCommands">
            <summary>
            Helper class for text command natives.
            </summary>
        </member>
        <member name="M:RAGENativeUI.TextCommands.NextSubstring(System.SByte*@,System.SByte*)">
            <summary>
            Gets the next substring of length <see cref="F:RAGENativeUI.TextCommands.MaxSubstringLength"/> without splitting `~` tokens.
            </summary>
        </member>
        <member name="F:RAGENativeUI.TextFont.ChaletLondonFixedWidthNumbers">
            <summary>
            Monospaced version of <see cref="F:RAGENativeUI.TextFont.ChaletLondon"/>. Only numbers and some symbols are available.
            </summary>
        </member>
        <member name="F:RAGENativeUI.TextJustification.Center">
            <summary>
            When used, the midpoint of the text is located at the drawing position.
            </summary>
        </member>
        <member name="F:RAGENativeUI.TextJustification.Left">
            <summary>
            When used, the left side of the text is located at the drawing position.
            </summary>
        </member>
        <member name="F:RAGENativeUI.TextJustification.Right">
            <summary>
            When used, the right side of the text is located at the border of the wrapping bounds.
            </summary>
        </member>
        <member name="T:RAGENativeUI.TextStyle">
            <summary>
            Defines the appearance of text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.TextStyle.Font">
            <summary>
            Gets or sets the font of the text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.TextStyle.Color">
            <summary>
            Gets or sets the color of the text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.TextStyle.Scale">
            <summary>
            Gets or sets the size of the text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.TextStyle.Justification">
            <summary>
            Gets or sets how the text is aligned.
            </summary>
        </member>
        <member name="P:RAGENativeUI.TextStyle.Wrap">
            <summary>
            Gets or sets the bounds where the text will be wrapped, in relative coordinates along the X-axis.
            </summary>
        </member>
        <member name="P:RAGENativeUI.TextStyle.DropShadow">
            <summary>
            Gets or sets whether a drop shadow is applied to the text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.TextStyle.Outline">
            <summary>
            Gets or sets whether an black outline is applied to the text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.TextStyle.CharacterHeight">
            <summary>
            Gets the height of a character in relative coordinates. It depends on the <see cref="P:RAGENativeUI.TextStyle.Font"/> and the <see cref="P:RAGENativeUI.TextStyle.Scale"/>.
            </summary>
        </member>
        <member name="M:RAGENativeUI.TextStyle.#ctor(RAGENativeUI.TextFont,System.Drawing.Color,System.Single,RAGENativeUI.TextJustification,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.TextStyle"/> structure.
            </summary>
            <param name="font">Determines the font of the text.</param>
            <param name="color">Determines the color of the text.</param>
            <param name="scale">Determines the size of the text.</param>
            <param name="justification">Determines how the text is aligned.</param>
            <param name="wrapStart">Determines the start of the bounds where the text will be wrapped, in relative coordinates along the X-axis.</param>
            <param name="wrapEnd">Determines the end of the bounds where the text will be wrapped, in relative coordinates along the X-axis.</param>
            <param name="dropShadow">Determines whether a drop shadow is applied to the text.</param>
            <param name="outline">Determines whether a black outline is applied to the text.</param>
            <remarks>
            Note, for creating your own styles, the recommended way is to derive them from a base <see cref="T:RAGENativeUI.TextStyle"/>, for example <see cref="F:RAGENativeUI.TextStyle.Default"/>.
            With this method you only have to specify the properties you want to change.
            The following snippet shows how to give the <see cref="F:RAGENativeUI.TextStyle.Default"/> style a dark red color and a drop shadow.
            <code lang="C#">
            TextStyle myStyle = TextStyle.Default.With(color: Color.FromArgb(120, 0, 0), dropShadow: true);
            </code>
            </remarks>
        </member>
        <member name="M:RAGENativeUI.TextStyle.Apply">
            <summary>
            Applies this style for the next text command.
            </summary>
        </member>
        <member name="M:RAGENativeUI.TextStyle.With(System.Nullable{RAGENativeUI.TextFont},System.Nullable{System.Drawing.Color},System.Nullable{System.Single},System.Nullable{RAGENativeUI.TextJustification},System.Nullable{System.ValueTuple{System.Single,System.Single}},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Creates a copy of this style with the specified properties changed.
            For each parameter, if it is <c>null</c> the copy keeps the value of the corresponding property of this style, otherwise, it uses the new value.
            <para>
            For creating your own styles, the recommended way is to derive them from a base <see cref="T:RAGENativeUI.TextStyle"/>, for example <see cref="F:RAGENativeUI.TextStyle.Default"/>.
            With this method you only have to specify the properties you want to change using named arguments.
            The following snippet shows how to give the <see cref="F:RAGENativeUI.TextStyle.Default"/> style a dark red color and a drop shadow.
            <code lang="C#">
            TextStyle myStyle = TextStyle.Default.With(color: Color.FromArgb(120, 0, 0), dropShadow: true);
            </code>
            </para>
            </summary>
            <param name="font">If specified, determines the font of the text.</param>
            <param name="color">If specified, determines the color of the text.</param>
            <param name="scale">If specified, determines the size of the text.</param>
            <param name="justification">If specified, determines how the text is aligned.</param>
            <param name="wrap">If specified, determines the bounds where the text will be wrapped, in relative coordinates along the X-axis.</param>
            <param name="dropShadow">If specified, determines whether a drop shadow is applied to the text.</param>
            <param name="outline">If specified, determines whether a black outline is applied to the text.</param>
            <returns>A copy of this <see cref="T:RAGENativeUI.TextStyle"/> with the specified properties changed.</returns>
        </member>
        <member name="M:RAGENativeUI.TextStyle.ToString">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.TextStyle.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.TextStyle.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:RAGENativeUI.TextStyle.Equals(RAGENativeUI.TextStyle)">
            <inheritdoc/>
        </member>
        <member name="F:RAGENativeUI.TextStyle.Default">
            <summary>
            Represents the default text style.
            </summary>
        </member>
        <member name="P:RAGENativeUI.TextStyle.Current">
            <summary>
            Gets or sets the text style currently applied. The setter is equivalent to <see cref="M:RAGENativeUI.TextStyle.Apply"/>.
            </summary>
        </member>
        <member name="T:RAGENativeUI.UIMenu">
            <summary>
            Base class for RAGENativeUI. Calls the next events: OnIndexChange, OnListChanged, OnCheckboxChange, OnItemSelect, OnMenuClose, OnMenuchange.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultMaxItemsOnScreen">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.UIMenu.MaxItemsOnScreen"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultWidth">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.UIMenu.Width"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultTitleStyle">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.UIMenu.TitleStyle"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultSubtitleStyle">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.UIMenu.SubtitleStyle"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultCounterStyle">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.UIMenu.CounterStyle"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultDescriptionStyle">
            <summary>
            Represents the default value of <see cref="P:RAGENativeUI.UIMenu.DescriptionStyle"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultDescriptionSeparatorColor">
            <summary>
            Represets the default value of <see cref="P:RAGENativeUI.UIMenu.DescriptionSeparatorColor"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultSubtitleBackgroundColor">
            <summary>
            Represets the default value of <see cref="P:RAGENativeUI.UIMenu.SubtitleBackgroundColor"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultUpDownArrowsBackgroundColor">
            <summary>
            Represets the default value of <see cref="P:RAGENativeUI.UIMenu.UpDownArrowsBackgroundColor"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultUpDownArrowsHighlightColor">
            <summary>
            Represets the default value of <see cref="P:RAGENativeUI.UIMenu.UpDownArrowsHighlightColor"/>.
            </summary>
        </member>
        <member name="F:RAGENativeUI.UIMenu.DefaultUpDownArrowsForegroundColor">
            <summary>
            Represets the default value of <see cref="P:RAGENativeUI.UIMenu.UpDownArrowsForegroundColor"/>.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.NumberOfVisibleMenus">
            <summary>
            Keeps track of the number of visible menus from the executing plugin.
            Used to keep <see cref="P:RAGENativeUI.Internals.Shared.NumberOfVisibleMenus"/> consistent when unloading the plugin with some menu open.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.IsAnyMenuVisible">
            <summary>
            Gets whether any menu is currently visible. Includes menus from the executing plugin and from other plugins.
            </summary>
        </member>
        <member name="E:RAGENativeUI.UIMenu.OnIndexChange">
            <summary>
            Called when user presses up or down, changing current selection.
            </summary>
        </member>
        <member name="E:RAGENativeUI.UIMenu.OnListChange">
            <summary>
            Called when user presses left or right, changing a list position.
            </summary>
        </member>
        <member name="E:RAGENativeUI.UIMenu.OnScrollerChange">
            <summary>
            Called when user scrolls through a <see cref="T:RAGENativeUI.Elements.UIMenuScrollerItem"/>, changing its index.
            </summary>
        </member>
        <member name="E:RAGENativeUI.UIMenu.OnCheckboxChange">
            <summary>
            Called when user presses enter on a checkbox item.
            </summary>
        </member>
        <member name="E:RAGENativeUI.UIMenu.OnItemSelect">
            <summary>
            Called when user selects a simple item.
            </summary>
        </member>
        <member name="E:RAGENativeUI.UIMenu.OnMenuOpen">
            <summary>
            Called when the menu becomes visible.
            </summary>
        </member>
        <member name="E:RAGENativeUI.UIMenu.OnMenuClose">
            <summary>
            Called when user closes the menu or goes back in a menu chain.
            </summary>
        </member>
        <member name="E:RAGENativeUI.UIMenu.OnMenuChange">
            <summary>
            Called when user either clicks on a binded button or goes back to a parent menu.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.InstructionalButtons">
            <summary>
            Gets the <see cref="T:RAGENativeUI.Elements.InstructionalButtons"/> instance used by this menu.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.InstructionalButtonsEnabled">
            <summary>
            Gets or sets whether the instructional buttons are currently visible.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.#ctor(System.String,System.String)">
            <summary>
            Basic Menu constructor.
            </summary>
            <param name="title">Title that appears on the big banner.</param>
            <param name="subtitle">Subtitle that appears in capital letters in a small black bar.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.#ctor(System.String,System.String,System.Drawing.Point)">
            <summary>
            Basic Menu constructor with an offset.
            </summary>
            <param name="title">Title that appears on the big banner.</param>
            <param name="subtitle">Subtitle that appears in capital letters in a small black bar. Set to "" if you dont want a subtitle.</param>
            <param name="offset">Point object with X and Y data for offsets. Applied to all menu elements.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.#ctor(System.String,System.String,System.Drawing.Point,Rage.Texture)">
            <summary>
            Initialise a menu with a custom texture banner.
            </summary>
            <param name="title">Title that appears on the big banner. Set to "" if you don't want a title.</param>
            <param name="subtitle">Subtitle that appears in capital letters in a small black bar. Set to "" if you dont want a subtitle.</param>
            <param name="offset">Point object with X and Y data for offsets. Applied to all menu elements.</param>
            <param name="customBanner">Your custom Rage.Texture.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.#ctor(System.String,System.String,System.Drawing.Point,System.String,System.String)">
            <summary>
            Advanced Menu constructor that allows custom title banner.
            </summary>
            <param name="title">Title that appears on the big banner. Set to "" if you are using a custom banner.</param>
            <param name="subtitle">Subtitle that appears in capital letters in a small black bar.</param>
            <param name="offset">Point object with X and Y data for offsets. Applied to all menu elements.</param>
            <param name="spriteLibrary">Sprite library name for the banner.</param>
            <param name="spriteName">Sprite name for the banner.</param>
        </member>
        <member name="P:RAGENativeUI.UIMenu.WidthOffset">
            <summary>
            Gets or sets the current width offset in pixels.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.Width">
            <summary>
            Gets or sets the menu width in relative coordinates.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.AdjustedWidth">
            <summary>
            Gets the menu width in relative coordinates, adjusted for the current aspect ratio and <see cref="P:RAGENativeUI.UIMenu.WidthOffset"/> value.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.SetMenuWidthOffset(System.Int32)">
            <summary>
            Change the menu's width. The width is calculated as DefaultWidth + WidthOffset, so a width offset of 10 would enlarge the menu by 10 pixels.
            </summary>
            <param name="widthOffset">New width offset.</param>
        </member>
        <member name="P:RAGENativeUI.UIMenu.Offset">
            <summary>
            Gets or sets the current position offset in pixels.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DisEnableControls(System.Boolean)">
            <summary>
            Enable or disable all controls but the necessary to operate a menu.
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DisableInstructionalButtons(System.Boolean)">
            <summary>
            Enable or disable the instructional buttons.
            </summary>
            <param name="disable"></param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.SetBannerType(RAGENativeUI.Elements.Sprite)">
            <summary>
            Set the banner to your own Sprite object.
            </summary>
            <param name="spriteBanner">Sprite object. The position and size does not matter.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.SetBannerType(RAGENativeUI.Elements.ResRectangle)">
            <summary>
             Set the banner to your own Rectangle.
            </summary>
            <param name="rectangle">UIResRectangle object. Position and size does not matter.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.SetBannerType(System.Drawing.Color)">
            <summary>
            Sets the banner to a single color rectangle.
            </summary>
            <param name="color">The new color of the banner.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.SetBannerType(Rage.Texture)">
            <summary>
            Set the banner to your own custom texture.
            </summary>
            <param name="texture">Rage.Texture object</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.RemoveBanner">
            <summary>
            Removes the banner.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.AddItem(RAGENativeUI.Elements.UIMenuItem)">
            <summary>
            Add an item to the menu.
            </summary>
            <param name="item">Item object to be added. Can be normal item, checkbox or list item.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.AddItem(RAGENativeUI.Elements.UIMenuItem,System.Int32)">
            <summary>
            Add an item to the menu at the specified index.
            </summary>
            <param name="item">Item object to be added. Can be normal item, checkbox or list item.</param>
            <param name="index"></param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.RemoveItemAt(System.Int32)">
            <summary>
            Remove an item at index n.
            </summary>
            <param name="index">Index to remove the item at.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.RefreshIndex">
            <summary>
            Reset the current selected item to 0. Use this after you add or remove items from <see cref="F:RAGENativeUI.UIMenu.MenuItems"/> directly
            instead of through <see cref="M:RAGENativeUI.UIMenu.AddItem(RAGENativeUI.Elements.UIMenuItem)"/>, <see cref="M:RAGENativeUI.UIMenu.AddItem(RAGENativeUI.Elements.UIMenuItem,System.Int32)"/> or <see cref="M:RAGENativeUI.UIMenu.RemoveItemAt(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.Clear">
            <summary>
            Remove all items from the menu.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DrawBanner(Rage.GraphicsEventArgs)">
            <summary>
            Draw your custom banner.
            </summary>
            <param name="e">Rage.GraphicsEventArgs to draw on.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DrawBanner(Rage.Graphics)">
            <summary>
            Draw your custom banner.
            <para>
            To prevent flickering call it inside a <see cref="E:Rage.Game.RawFrameRender"/> event handler.
            </para>
            </summary>
            <param name="g">The <see cref="T:Rage.Graphics"/> to draw on.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.BeginDraw">
            <summary>
            Called before drawing the menu or before getting screen coordinates for mouse input.
            Intended to align the menu with the safe zone using the <c>SET_SCRIPT_GFX_*</c> natives.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.EndDraw">
            <summary>
            Called after drawing the menu or after getting screen coordinates for mouse input to reset the state modified in <see cref="M:RAGENativeUI.UIMenu.BeginDraw"/>.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.Draw">
            <summary>
            Draw the menu and all of it's components.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DrawBanner(System.Single,System.Single@)">
            <summary>
            Draws the banner and title at the specified position.
            </summary>
            <param name="x">The position along the X-axis in relative coordinates.</param>
            <param name="y">
            The position along the Y-axis in relative coordinates.
            When this method returns, contains the position right below the banner.
            </param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DrawSubtitle(System.Single,System.Single@)">
            <summary>
            Draws the subtitle at the specified position.
            </summary>
            <param name="x">The position along the X-axis in relative coordinates.</param>
            <param name="y">
            The position along the Y-axis in relative coordinates.
            When this method returns, contains the position right below the subtitle.
            </param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DrawBackground(System.Single,System.Single)">
            <summary>
            Draws the items background at the specified position.
            </summary>
            <param name="x">The position along the X-axis in relative coordinates.</param>
            <param name="y">The position along the Y-axis in relative coordinates.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DrawItems(System.Single,System.Single@)">
            <summary>
            Draws the items beginning at the specified position.
            </summary>
            <param name="x">The position along the X-axis in relative coordinates.</param>
            <param name="y">
            The position along the Y-axis in relative coordinates.
            When this method returns, contains the position right below the items.
            </param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DrawUpDownArrows(System.Single,System.Single@)">
            <summary>
            Draws the up-down arrows at the specified position.
            </summary>
            <param name="x">The position along the X-axis in relative coordinates.</param>
            <param name="y">
            The position along the Y-axis in relative coordinates.
            When this method returns, contains the position right below the up-down arrows.
            </param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DrawDescription(System.Single,System.Single@)">
            <summary>
            Draws the description text and background at the specified position.
            </summary>
            <param name="x">The position along the X-axis in relative coordinates.</param>
            <param name="y">
            The position along the Y-axis in relative coordinates.
            When this method returns, contains the position right below the description.
            </param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.DrawPanels(System.Single,System.Single@)">
            <summary>
            Draws the description text and background at the specified position.
            </summary>
            <param name="x">The position along the X-axis in relative coordinates.</param>
            <param name="y">
            The position along the Y-axis in relative coordinates.
            When this method returns, contains the position right below the description.
            </param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.GetScreenResolutionMantainRatio">
            <summary>
            Returns the 1080pixels-based screen resolution while mantaining current aspect ratio.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RAGENativeUI.UIMenu.IsMouseInBounds(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Chech whether the mouse is inside the specified rectangle.
            </summary>
            <param name="topLeft">top left point of your rectangle.</param>
            <param name="boxSize">size of your rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:RAGENativeUI.UIMenu.IsMouseInListItemArrows(RAGENativeUI.Elements.UIMenuListItem,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Function to get whether the cursor is in an arrow space, or in label of an MenuListItem.
            </summary>
            <param name="item">What item to check</param>
            <param name="topLeft">top left point of the item.</param>
            <param name="safezone">safezone size.</param>
            <returns>0 - Not in item at all, 1 - In label, 2 - In arrow space.</returns>
        </member>
        <member name="M:RAGENativeUI.UIMenu.GetSafezoneBounds">
            <summary>
            Returns the safezone bounds in pixel, relative to the 1080pixel based system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RAGENativeUI.UIMenu.GoUp">
            <summary>
            Sends a <see cref="F:RAGENativeUI.Common.MenuControls.Up"/> input event to the selected item. If not consumed, the previous item is selected.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.GoDown">
            <summary>
            Sends a <see cref="F:RAGENativeUI.Common.MenuControls.Down"/> input event to the selected item. If not consumed, the next item is selected.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.GoLeft">
            <summary>
            Sends a <see cref="F:RAGENativeUI.Common.MenuControls.Left"/> input event to the selected item.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.GoRight">
            <summary>
            Sends a <see cref="F:RAGENativeUI.Common.MenuControls.Right"/> input event to the selected item.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.SelectItem">
            <summary>
            Sends a <see cref="F:RAGENativeUI.Common.MenuControls.Select"/> input event to the selected item.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.GoBack">
            <summary>
            Sends a <see cref="F:RAGENativeUI.Common.MenuControls.Back"/> input event to the selected item. If not consumed, the menu is closed.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.OpenChildMenu(RAGENativeUI.Elements.UIMenuItem)">
            <summary>
            Opens the menu binded to the specified item, if any.
            </summary>
            <param name="item">The item with the binded menu.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="item"/> is null.</exception>
        </member>
        <member name="M:RAGENativeUI.UIMenu.Close(System.Boolean)">
            <summary>
            Closes this menu.
            </summary>
            <param name="openParentMenu">If <c>true</c> and <see cref="P:RAGENativeUI.UIMenu.ParentMenu"/> is not <c>null</c>, the parent menu is opened after closing this menu.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.BindMenuToItem(RAGENativeUI.UIMenu,RAGENativeUI.Elements.UIMenuItem)">
            <summary>
            Bind a menu to a button. When the button is clicked that menu will open.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.ReleaseMenuFromItem(RAGENativeUI.Elements.UIMenuItem)">
            <summary>
            Remove menu binding from button.
            </summary>
            <param name="releaseFrom">Button to release from.</param>
            <returns>Returns true if the operation was successful.</returns>
        </member>
        <member name="M:RAGENativeUI.UIMenu.ProcessMouse">
            <summary>
            Process the mouse input. Checks if the mouse is hovering any <see cref="T:RAGENativeUI.Elements.UIMenuItem"/> or the up-down arrows,
            and sends the appropriate input events to the menu items.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.SetKey(RAGENativeUI.Common.MenuControls,Rage.GameControl)">
            <summary>
            Set a <see cref="T:Rage.GameControl"/> to control a menu. Can be multiple controls. This applies it to all indexes.
            </summary>
            <param name="control"></param>
            <param name="gtaControl"></param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.SetKey(RAGENativeUI.Common.MenuControls,Rage.GameControl,System.Int32)">
            <summary>
            Set a <see cref="T:Rage.GameControl"/> to control a menu only on a specific index.
            </summary>
            <param name="control"></param>
            <param name="gtaControl"></param>
            <param name="controlIndex"></param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.SetKeyAcceleration(RAGENativeUI.Common.MenuControls,RAGENativeUI.UIMenu.AccelerationStep[])">
            <summary>
            Sets how fast the input events of <paramref name="control"/> are triggered.
            </summary>
            <param name="control"></param>
            <param name="acceleration">An array containing the control acceleration. If <c>null</c>, the default acceleration is used.</param>
            <exception cref="T:System.ArgumentException"><paramref name="acceleration"/> length is 0.</exception>
        </member>
        <member name="M:RAGENativeUI.UIMenu.ResetKey(RAGENativeUI.Common.MenuControls)">
            <summary>
            Remove all controls on a control and sets its default acceleration.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.ProcessControl">
            <summary>
            Process control-stroke. Call this in the Game.FrameRender event or in a loop.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.Reset(System.Boolean,System.Boolean)">
            <summary>
            Sets the index of all lists to 0 and unchecks all the checkboxes. 
            </summary>
            <param name="resetLists">If true the index of all lists will be set to 0.</param>
            <param name="resetCheckboxes">If true all the checkboxes will be unchecked.</param>
        </member>
        <member name="M:RAGENativeUI.UIMenu.RefreshCurrentSelection">
            <summary>
            Refreshes the current item index and min/max visible items, in case they are out of bounds.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.Visible">
            <summary>
            Change whether this menu is visible to the user.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.IgnoreVisibility">
            <summary>
            If <c>true</c>, this menu is not included in <see cref="P:RAGENativeUI.UIMenu.NumberOfVisibleMenus"/>.
            Needed by <see cref="T:RAGENativeUI.PauseMenu.TabInteractiveListItem"/>, which uses a hidden menu for managing the menu items.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.CurrentSelection">
            <summary>
            Gets or sets the currently selected item index.
            A value of <c>-1</c> indicates that no selection exists, for example, when no items have been added to the menu.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.HasSelection">
            <summary>
            Gets whether a selection exists. If the selection exists, <see cref="P:RAGENativeUI.UIMenu.CurrentSelection"/> returns the index of the selected item; otherwise, <c>-1</c>.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.IsValidItemIndex(System.Int32)">
            <summary>
            Gets whether <paramref name="index"/> is in the range [0, MenuItems.Count).
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.MaxItemsOnScreen">
            <summary>
            Gets or set the maximum number of visible items.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If the specified value is less than 1.</exception>
        </member>
        <member name="P:RAGENativeUI.UIMenu.FirstItemOnScreen">
            <summary>
            Gets the index of the first visible item.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.LastItemOnScreen">
            <summary>
            Gets the index of the last visible item.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.IsUsingController">
            <summary>
            Returns false if last input was made with mouse and keyboard, true if it was made with a controller.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.Title">
            <summary>
            Gets or sets the title text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.TitleText">
            <summary>
            Gets or sets the title text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.TitleStyle">
            <summary>
            Gets or sets the title text style. Note, <see cref="P:RAGENativeUI.TextStyle.Wrap"/> is ignored and instead calculated based on the current menu width.
            </summary>
            <seealso cref="F:RAGENativeUI.UIMenu.DefaultTitleStyle"/>
        </member>
        <member name="P:RAGENativeUI.UIMenu.Subtitle">
            <summary>
            Gets or sets the subtitle text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.SubtitleText">
            <summary>
            Gets or sets the subtitle text.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.SubtitleStyle">
            <summary>
            Gets or sets the subtitle text style. Note, <see cref="P:RAGENativeUI.TextStyle.Wrap"/> is ignored and instead calculated based on the current menu width.
            </summary>
            <seealso cref="F:RAGENativeUI.UIMenu.DefaultSubtitleStyle"/>
        </member>
        <member name="P:RAGENativeUI.UIMenu.SubtitleBackgroundColor">
            <summary>
            Gets or sets the color of the subtitle background rectangle.
            </summary>
            <seealso cref="F:RAGENativeUI.UIMenu.DefaultSubtitleBackgroundColor"/>
        </member>
        <member name="P:RAGENativeUI.UIMenu.CounterPretext">
            <summary>
            String to pre-attach to the counter string. Useful for color codes.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.CounterOverride">
            <summary>
            Gets or sets the text that overrides the counter string.
            <para>
            If <c>null</c> the counter string isn't overrided.
            </para>
            </summary>
            <value>
            The text that overrides the counter string.
            </value>
        </member>
        <member name="P:RAGENativeUI.UIMenu.CounterStyle">
            <summary>
            Gets or sets the counter text style. Note, <see cref="P:RAGENativeUI.TextStyle.Wrap"/> is ignored and instead calculated based on the current menu width.
            </summary>
            <seealso cref="F:RAGENativeUI.UIMenu.DefaultCounterStyle"/>
        </member>
        <member name="P:RAGENativeUI.UIMenu.DescriptionOverride">
            <summary>
            Gets or sets the description override.
            If not <c>null</c>, this <see cref="T:System.String"/> is shown instead of
            the <see cref="P:RAGENativeUI.Elements.UIMenuItem.Description"/> of the currently selected item.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.DescriptionStyle">
            <summary>
            Gets or sets the description text style. Note, <see cref="P:RAGENativeUI.TextStyle.Wrap"/> is ignored and instead calculated based on the current menu width.
            </summary>
            <seealso cref="F:RAGENativeUI.UIMenu.DefaultDescriptionStyle"/>
        </member>
        <member name="P:RAGENativeUI.UIMenu.DescriptionSeparatorColor">
            <summary>
            Gets or sets the color of the description separator bar.
            </summary>
            <seealso cref="F:RAGENativeUI.UIMenu.DefaultDescriptionSeparatorColor"/>
        </member>
        <member name="P:RAGENativeUI.UIMenu.UpDownArrowsBackgroundColor">
            <summary>
            Gets or sets the color of the up-down arrows background rectangle.
            </summary>
            <seealso cref="F:RAGENativeUI.UIMenu.DefaultUpDownArrowsBackgroundColor"/>
        </member>
        <member name="P:RAGENativeUI.UIMenu.UpDownArrowsHighlightColor">
            <summary>
            Gets or sets the color used to highlight the up-down arrow selected with the mouse.
            </summary>
            <seealso cref="F:RAGENativeUI.UIMenu.DefaultUpDownArrowsHighlightColor"/>
        </member>
        <member name="P:RAGENativeUI.UIMenu.UpDownArrowsForegroundColor">
            <summary>
            Gets or sets the color of the up-down arrows.
            </summary>
            <seealso cref="F:RAGENativeUI.UIMenu.DefaultUpDownArrowsForegroundColor"/>
        </member>
        <member name="P:RAGENativeUI.UIMenu.PanelsOverride">
            <summary>
            Gets or sets the panels override.
            If not <c>null</c>, this list of <see cref="T:RAGENativeUI.Elements.UIMenuPanel"/>s is shown instead of
            the <see cref="P:RAGENativeUI.Elements.UIMenuItem.Panels"/> of the currently selected item.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.ParentMenu">
            <summary>
            If this is a nested menu, returns the parent menu. You can also set it to a menu so when pressing Back it goes to that menu.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.ParentItem">
            <summary>
            If this is a nested menu, returns the item it was binded to.
            </summary>
        </member>
        <member name="T:RAGENativeUI.UIMenu.AccelerationStep">
            <summary>
            Defines the how fast the input events of a control are triggered.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.AccelerationStep.HeldTime">
            <summary>
            Gets the number of milliseconds the control must be pressed before using the <see cref="P:RAGENativeUI.UIMenu.AccelerationStep.TimeBetweenRepeats"/> of this step.
            </summary>
        </member>
        <member name="P:RAGENativeUI.UIMenu.AccelerationStep.TimeBetweenRepeats">
            <summary>
            Gets the number of milliseconds between input events of the control.
            </summary>
        </member>
        <member name="M:RAGENativeUI.UIMenu.AccelerationStep.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:RAGENativeUI.UIMenu.AccelerationStep"/> structure.
            </summary>
            <param name="heldTime">Determines the number of milliseconds the control must be pressed before using the <see cref="P:RAGENativeUI.UIMenu.AccelerationStep.TimeBetweenRepeats"/> of this step.</param>
            <param name="timeBetweenRepeats">Determines the number of milliseconds between input events of the control.</param>
        </member>
    </members>
</doc>
